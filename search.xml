<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>fullpage中文使用文档</title>
      <link href="/2018/07/24/fullpage%E4%B8%AD%E6%96%87%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2018/07/24/fullpage%E4%B8%AD%E6%96%87%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      <content type="html"><![CDATA[<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>正如示例文件所示，需要引用：</p><ul><li>JavaScript 文件<code>fullpage.js</code> (或其缩小版本 <code>fullpage.min.js</code>)</li><li>css 文件<code>fullpage.css</code></li></ul><p><strong>可选</strong>，使用<code>css3:false</code>时，如果您想要使用库中包含的其他缓动效果的功能（<code>easeInOutCubic</code>），您可以添加<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/vendors/easings.min.js" target="_blank" rel="noopener">easings file</a>。</p><h3 id="使用bower或npm进行安装"><a href="#使用bower或npm进行安装" class="headerlink" title="使用bower或npm进行安装"></a>使用bower或npm进行安装</h3><p><strong>或者</strong>，如果您愿意，可以使用bower或npm安装fullPage.js：</p><p>终端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 使用bower</span><br><span class="line">bower install fullpage.js</span><br><span class="line"></span><br><span class="line">// 使用npm</span><br><span class="line">npm install fullpage.js</span><br></pre></td></tr></table></figure><h3 id="包含文件："><a href="#包含文件：" class="headerlink" title="包含文件："></a>包含文件：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;fullpage.css&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 以下行是可选的。 只有在使用选项css3:false，并且您希望使用其他缓动效果，而非“linear”、“swing”或“easeInOutCubic”时才有必要。 --&gt;</span><br><span class="line">&lt;script src=&quot;vendors/easings.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 以下行仅在使用选项scrollOverflow:true的情况下是必需的 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;vendors/scrolloverflow.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="可选用CDN："><a href="#可选用CDN：" class="headerlink" title="可选用CDN："></a>可选用CDN：</h3><p>如果您倾向使用CDN载入所需文件，fullPage.js在CDNJS： <a href="https://cdnjs.com/libraries/fullPage.js" target="_blank" rel="noopener">https://cdnjs.com/libraries/fullPage.js</a></p><h3 id="要求HTML结构"><a href="#要求HTML结构" class="headerlink" title="要求HTML结构"></a>要求HTML结构</h3><p>HTML文件中的首行HTML代码必须使用<a href="http://www.corelangs.com/html/introduction/doctype.html" target="_blank" rel="noopener">HTML DOCTYPE 声明</a>，否则可能会遇到代码段高度问题。HTML 5 doctype中的示例： <code>&lt;!DOCTYPE html&gt;</code>.</p><p>每个代码段定义为包含<code>section</code>类的元素。 第一个代码段作为主页，是默认激活代码。 代码段应进行封装（即<code>&lt;div id=&quot;fullpage&quot;&gt;</code> ）。 封装不能是<code>body</code>元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;fullpage&quot;&gt;</span><br><span class="line">&lt;div class=&quot;section&quot;&gt;Some section&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;section&quot;&gt;Some section&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;section&quot;&gt;Some section&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;section&quot;&gt;Some section&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如果你想定义一个与众不同的起始页面，而不是原始第一段或第一个滑动页，只需将<code>active</code>类添加到你想首先载入的段或滑动页。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section active&quot;&gt;Some section&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>为在代码段中创建横向滑块，每个滑动页将默认定义为包含<code>slide</code>类的元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section&quot;&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot;&gt; 幻灯片 1 &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot;&gt; 幻灯片 2 &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot;&gt; 幻灯片 3 &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot;&gt; 幻灯片 4 &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>可以在<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/examples/demoPage.html" target="_blank" rel="noopener"><code>demoPage.html</code>文件</a>看到完整的HTML结构的例子</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><h4 id="用Vanilla-Javascript初始化"><a href="#用Vanilla-Javascript初始化" class="headerlink" title="用Vanilla Javascript初始化"></a>用Vanilla Javascript初始化</h4><p>您只需要在关闭<code>&lt;/body&gt;</code>标签之前调用fullPage.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">//options here</span><br><span class="line">autoScrolling:true,</span><br><span class="line">scrollHorizontally: true</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//methods</span><br><span class="line">fullpage_api.setAllowScrolling(false);</span><br></pre></td></tr></table></figure><h4 id="使用jQuery进行初始化"><a href="#使用jQuery进行初始化" class="headerlink" title="使用jQuery进行初始化"></a>使用jQuery进行初始化</h4><p>如果您需要，您也可以将fullpage.js作为jQuery插件使用！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(function() &#123;</span><br><span class="line">$(&apos;#fullpage&apos;).fullpage(&#123;</span><br><span class="line">//options here</span><br><span class="line">autoScrolling:true,</span><br><span class="line">scrollHorizontally: true</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//methods</span><br><span class="line">$.fn.fullpage.setAllowScrolling(false);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>函数和方法仍然可以用jQuery方式调用，如在[fullPage.js v2.X]中一样（<a href="https://github.com/alvarotrigo/fullPage.js/tree/2.9.7%EF%BC%89%E3%80%82" target="_blank" rel="noopener">https://github.com/alvarotrigo/fullPage.js/tree/2.9.7）。</a></p><h4 id="带有所有功能选项的Vanilla-JS-演示"><a href="#带有所有功能选项的Vanilla-JS-演示" class="headerlink" title="带有所有功能选项的Vanilla JS 演示"></a>带有所有功能选项的Vanilla JS 演示</h4><p>所有选项设置的更复杂的初始化如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">var myFullpage = new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">//导航</span><br><span class="line">menu: &apos;#menu&apos;,</span><br><span class="line">lockAnchors: false,</span><br><span class="line">anchors:[&apos;firstPage&apos;, &apos;secondPage&apos;],</span><br><span class="line">navigation: false,</span><br><span class="line">navigationPosition: &apos;right&apos;,</span><br><span class="line">navigationTooltips: [&apos;firstSlide&apos;, &apos;secondSlide&apos;],</span><br><span class="line">showActiveTooltip: false,</span><br><span class="line">slidesNavigation: false,</span><br><span class="line">slidesNavPosition: &apos;bottom&apos;,</span><br><span class="line"></span><br><span class="line">//滚动</span><br><span class="line">css3: true,</span><br><span class="line">scrollingSpeed: 700,</span><br><span class="line">autoScrolling: true,</span><br><span class="line">fitToSection: true,</span><br><span class="line">fitToSectionDelay: 1000,</span><br><span class="line">scrollBar: false,</span><br><span class="line">easing: &apos;easeInOutCubic&apos;,</span><br><span class="line">easingcss3: &apos;ease&apos;,</span><br><span class="line">loopBottom: false,</span><br><span class="line">loopTop: false,</span><br><span class="line">loopHorizontal: true,</span><br><span class="line">continuousVertical: false,</span><br><span class="line">continuousHorizontal: false,</span><br><span class="line">scrollHorizontally: false,</span><br><span class="line">interlockedSlides: false,</span><br><span class="line">dragAndMove: false,</span><br><span class="line">offsetSections: false,</span><br><span class="line">resetSliders: false,</span><br><span class="line">fadingEffect: false,</span><br><span class="line">normalScrollElements: &apos;#element1, .element2&apos;,</span><br><span class="line">scrollOverflow: false,</span><br><span class="line">scrollOverflowReset: false,</span><br><span class="line">scrollOverflowOptions: null,</span><br><span class="line">touchSensitivity: 15,</span><br><span class="line">normalScrollElementTouchThreshold: 5,</span><br><span class="line">bigSectionsDestination: null,</span><br><span class="line"></span><br><span class="line">//可访问</span><br><span class="line">keyboardScrolling: true,</span><br><span class="line">animateAnchor: true,</span><br><span class="line">recordHistory: true,</span><br><span class="line"></span><br><span class="line">//设计</span><br><span class="line">controlArrows: true,</span><br><span class="line">verticalCentered: true,</span><br><span class="line">sectionsColor : [&apos;#ccc&apos;, &apos;#fff&apos;],</span><br><span class="line">paddingTop: &apos;3em&apos;,</span><br><span class="line">paddingBottom: &apos;10px&apos;,</span><br><span class="line">fixedElements: &apos;#header, .footer&apos;,</span><br><span class="line">responsiveWidth: 0,</span><br><span class="line">responsiveHeight: 0,</span><br><span class="line">responsiveSlides: false,</span><br><span class="line">parallax: false,</span><br><span class="line">parallaxOptions: &#123;type: &apos;reveal&apos;, percentage: 62, property: &apos;translate&apos;&#125;,</span><br><span class="line"></span><br><span class="line">//自定义选择器</span><br><span class="line">sectionSelector: &apos;.section&apos;,</span><br><span class="line">slideSelector: &apos;.slide&apos;,</span><br><span class="line"></span><br><span class="line">lazyLoading: true,</span><br><span class="line"></span><br><span class="line">//事件</span><br><span class="line">onLeave: function(index, nextIndex, direction)&#123;&#125;,</span><br><span class="line">afterLoad: function(origin, destination, direction)&#123;&#125;,</span><br><span class="line">afterRender: function()&#123;&#125;,</span><br><span class="line">afterResize: function(width, height)&#123;&#125;,</span><br><span class="line">afterResponsive: function(isResponsive)&#123;&#125;,</span><br><span class="line">afterSlideLoad: function(section, origin, destination, direction)&#123;&#125;,</span><br><span class="line">onSlideLeave: function(section, origin, destination, direction)&#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="创建链接到段落或幻灯片"><a href="#创建链接到段落或幻灯片" class="headerlink" title="创建链接到段落或幻灯片"></a>创建链接到段落或幻灯片</h3><p>如果你在段落中使用fullPage.js和锚链接（在每个部分使用<code>anchors</code>选项或属性<code>data-anchor</code>），那么你将能够在一个段落里使用锚链接直接导航到某个幻灯片。</p><p>这是一个锚链接的例子： <a href="http://alvarotrigo.com/fullPage/#secondPage/2" target="_blank" rel="noopener">http://alvarotrigo.com/fullPage/#secondPage/2</a> （在你手动访问该段落/幻灯片就会看到的URL） 请注意，URL的最后部分以<code>＃secondPage / 2</code>结尾。</p><p>以下初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">anchors:[&apos;firstPage&apos;, &apos;secondPage&apos;, &apos;thirdPage&apos;]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>URL<code>#secondPage/2</code> 结尾处的锚分别定义了目标段落和幻灯片。 在前面的URL中，目标段落将是使用锚点 <code>secondPage</code> 定义的段落，幻灯片将会是第2张幻灯片，因为我们使用索引 <code>2</code> 。 （一个段落的第一个幻灯片有索引0，在技术上这是一个段落）。</p><p>如果我们在HTML标记中使用属性<code>data-anchor</code>，就可以使用自定义锚点来代替它的索引：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section&quot;&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot; data-anchor=&quot;slide1&quot;&gt; 幻灯片 1 &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot; data-anchor=&quot;slide2&quot;&gt; 幻灯片 2 &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot; data-anchor=&quot;slide3&quot;&gt; 幻灯片 3 &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;slide&quot; data-anchor=&quot;slide4&quot;&gt; 幻灯片 4 &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在最后一种情况中，我们使用的URL将是<code>#secondPage/slide3</code>，这相当于之前的 <code>#secondPage/2</code>。</p><p>请注意，如果没有提供<code>anchors</code>数组，则也可以使用<code>data-anchor</code>属性以同样的方式定义节锚点。</p><p><strong>注意！</strong><code>data-anchor</code>标记的值不能与站点上的任何ID元素（或IE的NAME元素）相同。</p><h3 id="创建更小或更大的段落"><a href="#创建更小或更大的段落" class="headerlink" title="创建更小或更大的段落"></a>创建更小或更大的段落</h3><p><a href="http://codepen.io/alvarotrigo/pen/BKjRYm" target="_blank" rel="noopener">演示</a> fullPage.js提供了一种方法来删除段落和幻灯片的全高限制。 可以创建高度小于或大于视口的段落。 这是页脚的理想方式。 需明白所有段落使用此功能并没有意义，这一点很重要。 如果网站的初始加载中有多个段落，则fullPage.js将不会滚动以查看下一个段落，因为它已经在视口中。</p><p>创建更小的段落，只需在要应用的段落中使用<code>fp-auto-height</code> 类即可，则可以调用您的段落/幻灯片中定义的高度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section&quot;&gt;整个视口&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;section fp-auto-height&quot;&gt;自动高度&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="响应自动高度段落"><a href="#响应自动高度段落" class="headerlink" title="响应自动高度段落"></a>响应自动高度段落</h4><p><a href="https://codepen.io/alvarotrigo/pen/WZmMgZ" target="_blank" rel="noopener">演示</a> 响应自动高度可以通过使用<code>fp-auto-height-responsive</code>类来调用。 这种方式段落将全屏，直到响应模式终止。 根据定义调整大小，可能是大于或小于视口。</p><h3 id="由fullpage-js添加的状态类"><a href="#由fullpage-js添加的状态类" class="headerlink" title="由fullpage.js添加的状态类"></a>由fullpage.js添加的状态类</h3><p>Fullpage.js在不同的元素中添加多个类来保存网站状态的记录：</p><ul><li><code>active</code> 添加当前可见部分并滑动。</li><li><code>active</code> 被添加到当前菜单元素（如果使用<code>menu</code>选项）。</li><li><code>fp-viewing-SECTION-SLIDE</code>形式的类被添加到网站的 <code>body</code> 元素中。(例如： <a href="http://alvarotrigo.com/fullPage/#secondPage" target="_blank" rel="noopener"><code>fp-viewing-secondPage-0</code></a>) <code>SECTION</code>和<code>SLIDE</code>部分将成为当前部分和幻灯片的锚（或索引，如果没有提供锚）。</li><li>当进入响应模式时，<code>fp-responsive</code>添加到<code>body</code>元素`</li><li>当启用fullpage.js时，<code>fp-enabled</code>添加到<code>html</code>元素。 （并在销毁时被移除）。</li><li>当fullPage.js被销毁时，<code>fp-destroyed</code>被添加到fullpage.js容器中。</li></ul><h3 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h3><p><a href="http://codepen.io/alvarotrigo/pen/eNLBXo" target="_blank" rel="noopener">演示</a> fullPage.js提供了一种延迟加载图像、视频和音频元素的方式，这样它们不会减慢网站的加载速度，也不会浪费数据传输。 当使用延迟加载时，所有这些元素只有在进入视口时才会加载。 要启用延迟加载，您只需将<code>src</code>属性更改为<code>data-src</code>，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;img data-src=&quot;image.png&quot;&gt;</span><br><span class="line">&lt;video&gt;</span><br><span class="line">&lt;source data-src=&quot;video.webm&quot; type=&quot;video/webm&quot; /&gt;</span><br><span class="line">&lt;source data-src=&quot;video.mp4&quot; type=&quot;video/mp4&quot; /&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>如果您已经使用另一个使用<code>data-src</code>的延迟加载解决方案，则可以通过设置 <code>lazyLoading: false</code>选项来禁用fullPage.js延迟加载。</p><h3 id="自动播放-暂停嵌入式媒体"><a href="#自动播放-暂停嵌入式媒体" class="headerlink" title="自动播放/暂停嵌入式媒体"></a>自动播放/暂停嵌入式媒体</h3><p><strong>注意</strong>：根据操作系统和浏览器的不同，自动播放功能可能无法在某些移动设备上使用（即<a href="https://webkit.org/blog/6784/new-video-policies-for-ios/" target="_blank" rel="noopener">iOS的Safari</a> 版本 &lt; 10.0）。</p><h4 id="播放部分-幻灯片载入："><a href="#播放部分-幻灯片载入：" class="headerlink" title="播放部分/幻灯片载入："></a>播放部分/幻灯片载入：</h4><p>对于视频或音频使用属性 <code>autoplay</code>，或者对于youtube iframe使用参数<code>autoplay=1</code>将使得在加载页面时播放媒体元素。 在段落/幻灯片载入使用而不是属性<code>data-autoplay</code>播放。 例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio data-autoplay&gt;</span><br><span class="line">&lt;source src=&quot;http://metakoncept.hr/horse.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class="line">&lt;/audio&gt;</span><br></pre></td></tr></table></figure><h4 id="暂停"><a href="#暂停" class="headerlink" title="暂停"></a>暂停</h4><p>嵌入式HTML5<code>&lt;video&gt;</code>/<code>&lt;audio&gt;</code>和Youtube iframe在离开某个段落或幻灯片时自动暂停。 可以通过使用属性<code>data-keepplaying</code>来禁用。 例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio data-keepplaying&gt;</span><br><span class="line">&lt;source src=&quot;http://metakoncept.hr/horse.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class="line">&lt;/audio&gt;</span><br></pre></td></tr></table></figure><h3 id="使用扩展"><a href="#使用扩展" class="headerlink" title="使用扩展"></a>使用扩展</h3><p>fullpage.js <a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">提供了一组扩展</a>您可以使用它来增强其默认功能。 所有这些都被列为 <a href="https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese/#%E9%80%89%E9%A1%B9" target="_blank" rel="noopener">fullpage.js 选项</a>.</p><p>扩展需要使用在<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/dist/" target="_blank" rel="noopener"><code>dist</code> 文件夹</a>中的缩小文件 <a href="https://github.com/alvarotrigo/fullPage.js/tree/master/dist/fullpage.extensions.min.js" target="_blank" rel="noopener"><code>fullpage.extensions.min.js</code></a>，而不是通常的fullPage.js文件 (<code>fullpage.js</code> 或 <code>fullpage.min.js</code>)。</p><p>一旦你需要扩展文件，你需要在fullPage之前添加它。 例如，如果我想要使用Continuos Horizontal扩展，我将包含扩展文件，然后包含fullPage文件的扩展版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.continuousHorizontal.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;fullpage/fullpage.extensions.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>每个扩展都需要激活密钥和许可证密钥。<a href="https://github.com/alvarotrigo/fullPage.js/blob/master/lang/chinese/how-to-activate-fullpage-extension.md" target="_blank" rel="noopener">在这里看到更多细节</a>.</p><p>然后你就可以按照<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese/#%E9%80%89%E9%A1%B9" target="_blank" rel="noopener">选项</a>的说明使用和配置它们。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><p>-<code>licenseKey</code>：（默认<code>null</code>）。 <strong>此选项是强制性的。</strong>如果您在非开源项目中使用fullPage，则应使用购买fullPage商业许可证时提供的许可证密钥。 否则，您可以使用字符串<code>OPEN-SOURCE-GPLV3-LICENSE</code>。 请阅读更多关于许可[这里]（<a href="https://github.com/alvarotrigo/fullPage.js#license%EF%BC%89%E5%92%8C%5B%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%8A%5D%EF%BC%88https://alvarotrigo.com/fullPage/pricing/%EF%BC%89%E3%80%82" target="_blank" rel="noopener">https://github.com/alvarotrigo/fullPage.js#license）和[在网页上]（https://alvarotrigo.com/fullPage/pricing/）。</a></p><ul><li><code>v2compatible</code>: (默认 <code>false</code>). 确定是否使其与版本2编写的任何代码100％兼容，忽略版本3的新功能或api更改。状态类，回调签名等的工作方式与在版本2上完全相同。<strong>请注意该选项将在之后的某个时候被删除。</strong>。</li><li><code>controlArrows</code>：（默认为 <code>true</code>）确定是否将幻灯片的控制箭头向右或向左移动。</li><li><code>verticalCentered</code>：（默认为<code>true</code>）在段落内部垂直居中。 当设置为<code>true</code>时，您的代码将被库包装。可考虑使用委托或在<code>afterRender</code>回调中加载其他脚本。</li><li><code>scrollingSpeed</code>：（默认<code>700</code>）滚动转换的速度（以毫秒为单位）。</li><li><code>sectionsColor</code>：（默认<code>none</code>）为每个部分定义CSS<code>background-color</code>属性。 例：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">sectionsColor: [&apos;#f2f2f2&apos;, &apos;#4BBFC3&apos;, &apos;#7BAABE&apos;, &apos;whitesmoke&apos;, &apos;#000&apos;],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><code>anchors</code>：（默认<code>[]</code>）定义要在每个部分的URL上显示的锚链接（#example）。 锚点的值应该是独一无二的。 数组中的锚的位置将限定锚被应用于哪些部分。 （第二部分的第二个位置等等）。 通过浏览器也可以使用锚点向前和向后导航。 该选项还允许用户为特定的部分或幻灯片添加书签。 <strong>注意！</strong>锚点不能与站点上的任何ID元素（或IE的NAME元素）具有相同的值。 现在可以通过使用属性<code>data-anchor</code>直接在HTML结构中定义锚点，如此处所述。</li><li><code>lockAnchors</code>：（默认为<code>false</code>）确定URL中的锚是否在库中完全有效。 您仍然可以在函数和回调内部使用锚，但是它们在滚动网站时不起任何作用。 如果你想在URL中使用锚点来将fullPage.js和其他插件结合起来，那就很有用。</li></ul><p><strong>重要</strong>理解 <code>anchors</code>选项数组中的值通过在标记中的位置直接关联到具有<code>.section</code> 类的元素是有帮助的。</p><ul><li><code>easing</code>:(默认<code>easeInOutCubic</code>）定义用于垂直和水平滚动的过渡效果。 它需要文件<code>vendors / easings.min.js</code>或<a href="http://jqueryui.com/" target="_blank" rel="noopener">jQuery UI</a>来使用<a href="http://api.jqueryui.com/easings/" target="_blank" rel="noopener">它的转换</a>。 其他库可以用来代替。</li><li><code>easingcss3</code>: （默认<code>ease</code>）定义在使用<code>css3：true</code>的情况下使用的过渡效果。 你可以使用<a href="http://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp" target="_blank" rel="noopener">预定义的</a>（比如<code>linear</code>，<code>ease-out</code> …）或者使用<code>立方bezier</code>功能创建你自己的。 你可能想使用<a href="http://matthewlein.com/ceaser/" target="_blank" rel="noopener">Matthew Lein CSS缓动动画工具</a>。</li><li><code>loopTop</code>:（默认为<code>false</code>）定义在第一节中向上滚动是否滚动到最后一个。</li><li><code>loopBottom</code>: （默认为<code>false</code>）定义滚动到最后一节是否应该滚动到第一个。</li><li><code>loopHorizontal</code>:（默认为<code>true</code>）定义水平滑块是否在到达上一张或上一张幻灯片后循环。</li><li><code>css3</code>: （默认<code>true</code>）。 定义是否使用JavaScript或CSS3变换在部分和幻灯片中滚动。 有助于通过支持CSS3的浏览器加速平板电脑和移动设备的移动。 如果此选项设置为`true，并且浏览器不支持CSS3，则将使用后备。</li><li><code>autoScrolling</code>: （默认为<code>true</code>）定义是使用“自动”滚动还是“正常”滚动。 它同时也影响了平板电脑和移动电话中浏览器/设备窗口部分适配的方式。</li><li><code>fitToSection</code>: （默认为<code>true</code>）确定是否节放入视口中。 当设置为`true时，当前活动节将始终填充整个视口。 否则，用户可以自由地停留在一个节的中间（何时）</li><li><code>fitToSectionDelay</code>: （默认1000）。 如果<code>fitToSection</code>设置为true，则延迟 以毫秒为单位进行拟合。</li><li><code>scrollBar</code>: （默认<code>false</code>）确定是否使用站点的滚动条。 在使用滚动条的情况下，<code>autoScrolling</code>功能仍将按预期工作。 用户也可以使用滚动条自由滚动网站，当滚动完成时，fullPage.js将适配屏幕上的部分。</li><li><code>paddingTop</code>: （默认<code>0</code>）用数值和度量（paddingTop：’10px’，paddingTop：’10em’…）定义每个部分的顶部填充。</li><li><code>paddingBottom</code>: （默认为<code>0</code>）用数值和度量（paddingBottom：’10px’，paddingBottom：’10em’…）定义每个部分的底部填充。 使用固定页脚的情况下会有用。</li><li><code>fixedElements</code>: （默认<code>null</code>）定义当使用<code>css3</code>选项保持固定时，哪些元素将从插件的滚动结构中移除。 它需要一个字符串与这些元素的Javascript选择器。 （例如：<code>fixedElements：&#39;＃element1，.element2&#39;</code>）</li><li><code>normalScrollElements</code>: （默认<code>null</code>）如果你想在滚动某些元素时避免自动滚动，这是你需要使用的选项。 （地图，滚动div等有用）它需要一个字符串与这些元素的Javascript选择器。 （例如：<code>normalScrollElements：&#39;＃element1，.element2&#39;</code>）。 此选项不应该应用于任何节/幻灯片元素本身。</li><li><code>normalScrollElementTouchThreshold</code> : （默认<code>5</code>）定义html节点树的跳数阈值Fullpage将测试<code>normalScrollElements是否匹配，以允许在触摸设备上的div的滚动功能。 （例如：</code>normalScrollElementTouchThreshold：3`）</li><li><code>bigSectionsDestination</code>: （默认<code>null</code>）定义如何滚动到比视口大的部分。 默认情况下，如果您来自目的地上方的部分，fullPage.js将滚动到顶部，如果您来自目的地之下的部分，则会滚动到底部。 可能的值是<code>top</code>，<code>bottom</code>，<code>null</code>。</li><li><code>keyboardScrolling</code>: （默认为<code>true</code>）定义是否可以使用键盘浏览内容。</li><li><code>touchSensitivity</code>: （默认<code>5</code>）定义浏览器窗口宽度/高度的百分比，以及滑动到下一个节/幻灯片必须测量的距离</li><li><code>continuousVertical</code>:（默认为<code>false</code>）定义是否在最后一个区段向下滚动，或是否应该向下滚动到第一个区段，或如果在第一个区段向上滚动时是否应该滚动到最后一个区段。 不兼容<code>loopTop</code>，<code>loopBottom</code>或站点中存在的任何滚动条（<code>scrollBar：true</code>或<code>autoScrolling：false</code>）。</li><li><code>continuousHorizontal</code>: （默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 定义在最后一张幻灯片中向右滑动是否应该向右滑动到第一张幻灯片，或者如果在第一张幻灯片中向左滚动是否应向左滑动到最后一张。 不兼容<code>loopHorizontal</code>。 需要fullpage.js&gt; = 2.8.3。</li><li><code>scrollHorizontally</code>:（默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 定义是否使用鼠标滚轮或触控板在滑块内水平滑动。 讲故事的理想选择。 需要fullpage.js&gt; = 2.8.3。</li><li><code>interlockedSlides</code>: （默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 确定移动一个水平滑块是否会强制滑块在其他段落中的滑动方向相同。 可能的值是<code>true</code>，<code>false或带有互锁部分的数组。 例如</code>[1,3,5]`从1开始。需要fullpage.js&gt; = 2.8.3。</li><li><code>dragAndMove</code>: （默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 启用或禁用鼠标或手指拖动和滑动部分和幻灯片。 需要fullpage.js&gt; = 2.8.9。 可能的值是：<ul><li><code>true</code>: 启用该功能。</li><li><code>false</code>: 禁用该功能。</li><li><code>vertical</code>: 只能在垂直情况下启用该功能。</li><li><code>horizontal</code>: 只能在水平情况下启用该功能。</li><li><code>fingersonly</code>: 仅启用触摸设备的功能。</li><li><code>mouseonly</code>: 仅启用桌面设备的功能（鼠标和触控板）。</li></ul></li><li><code>offsetSections</code>: （默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 提供基于百分比使用非全屏幕部分的方法。 通过显示下一部分或上一部分的内容，向访问者显示网站中的更多内容的理想选择。 需要fullPage.js&gt; = 2.8.8 要定义每个部分的百分比，必须使用属性<code>data-percentage</code>。 可以通过在属性<code>data-centered</code>中使用布尔值来确定视口中该部分的居中（如果未指定，则默认为<code>true</code>）。 例如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;section&quot; data-percentage=&quot;80&quot; data-centered=&quot;true&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li><code>resetSliders</code>: （默认<code>false</code>）。 <a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 定义是否在离开节后重置每个滑块。 需要fullpage.js&gt; = 2.8.3。</li><li><code>fadingEffect</code>: （默认<code>false</code>）。 <a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 定义是否使用淡入淡出效果，而不是默认的滚动效果。 可能的值是<code>true</code>，<code>false</code>，<code>sections</code>，<code>slides</code>。 因此，可以垂直或水平地应用，或者同时应用于两者。 需要fullpage.js&gt; = 2.8.6。</li><li><code>animateAnchor</code>: （默认<code>true</code>）定义给定锚点（＃）的站点的负载是否会随着动画滚动到其目的地或直接加载给定部分。</li><li><code>recordHistory</code>: （默认为<code>true</code>）定义是否将网站的状态推送到浏览器的历史记录。 设置为<code>true</code>时，网站的每个部分/幻灯片将作为新页面，浏览器的后退和前进按钮将滚动部分/幻灯片以达到网站的上一个或下一个状态。 当设置为<code>false</code>时，URL将保持更改，但不会影响浏览器的历史记录。 使用<code>autoScrolling：false</code>时，该选项会自动关闭。</li><li><code>menu</code>: （默认<code>false</code>）选择器可以用来指定菜单链接到部分。 这样，节的滚动将使用<code>active类激活菜单中的相应元素。 这将不会生成菜单，而只是将</code>active类添加到给定菜单中的元素，并带有相应的锚链接。 为了将菜单的元素与各个部分相链接，将需要一个HTML 5数据标签（<code>data-menuanchor</code>）来使用这些部分中使用的锚链接。 例：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul id=&quot;myMenu&quot;&gt;</span><br><span class="line">&lt;li data-menuanchor=&quot;firstPage&quot; class=&quot;active&quot;&gt;&lt;a href=&quot;#firstPage&quot;&gt;第一节&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li data-menuanchor=&quot;secondPage&quot;&gt;&lt;a href=&quot;#secondPage&quot;&gt;第二节&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li data-menuanchor=&quot;thirdPage&quot;&gt;&lt;a href=&quot;#thirdPage&quot;&gt;第三节&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li data-menuanchor=&quot;fourthPage&quot;&gt;&lt;a href=&quot;#fourthPage&quot;&gt;第四节&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">anchors: [&apos;firstPage&apos;, &apos;secondPage&apos;, &apos;thirdPage&apos;, &apos;fourthPage&apos;, &apos;lastPage&apos;],</span><br><span class="line">menu: &apos;#myMenu&apos;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 菜单元素应放置在整页包装外，以避免使用<code>css3：true</code>时出现问题。 否则它会被插件本身附加到<code>body</code>。</p><ul><li><code>navigation</code>: （默认<code>false</code>）如果设置为<code>true</code>，则会显示一个由小圆圈组成的导航栏。</li><li><code>navigationPosition</code>: （默认<code>none</code>）可以设置为<code>left</code>或<code>right</code>，并定义导航栏显示的位置（如果使用的话）。</li><li><code>navigationTooltips</code>: （默认为[]）定义要使用导航圈的工具提示。 例如：<code>navigationTooltips：[&#39;firstSlide&#39;，&#39;secondSlide&#39;]</code>。 如果您愿意，也可以在每个部分中使用属性<code>data-tooltip</code>来定义它们。</li><li><code>showActiveTooltip</code>: （默认为<code>false</code>）显示垂直导航中主动查看节的持久工具提示。</li><li><code>slidesNavigation</code>: （默认为<code>false</code>）如果设置为<code>true</code>，则会显示一个导航栏，该导航栏由站点上每个横向滑块的小圆圈组成。</li><li><code>slidesNavPosition</code>: （默认<code>bottom</code>）定义滑块的横向导航栏的位置。 值为<code>top</code>和<code>bottom</code>。 您可能需要修改CSS样式以确定从顶部或底部以及任何其他样式（如颜色）的距离。</li><li><code>scrollOverflow</code>: （默认为<code>false</code>）定义在内容大于它的高度的情况下是否为节/幻灯片创建滚动。 当设置为<code>true</code>时，您的内容将被插件包装。 考虑使用委托或在<code>afterRender</code>回调中加载其他脚本。 如果设置为<code>true</code>，则需要库<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/vendors/scrolloverflow.min.js" target="_blank" rel="noopener"><code>scrolloverflow.min.js</code></a>。 这个文件必须在fullPage.js插件之前而非jQuery（在使用它的情况下）加载。 例如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;vendors/scrolloverflow.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;fullpage.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>为了防止fullpage.js在某些节或幻灯片中创建滚动条，请使用<code>fp-noscroll</code>类。 例如： <code>&lt;div class=&quot;section fp-noscroll&quot;&gt;</code></p><p>在section元素中使用<code>fp-auto-height-responsive</code>时，您也可以防止scrolloverflow应用于响应模式。</p><ul><li><code>scrollOverflowReset</code>:（默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 如果设置为<code>true</code>，当离开另一个垂直节时，使用滚动条向上滚动节/幻灯片的内容。 这样，即使从下面的节滚动，节/幻灯片也会始终显示其内容的开始。</li><li><code>scrollOverflowOptions</code>: 当使用scrollOverflow：true时，fullpage.js将使用<a href="https://github.com/cubiq/iscroll/" target="_blank" rel="noopener">iScroll.js库文件</a>的分叉和修改版本。 您可以通过为要使用的iScroll.js选项提供fullpage.js来自定义滚动行为。 查看<a href="http://iscrolljs.com/" target="_blank" rel="noopener">它的文档</a>了解更多信息。</li><li><code>sectionSelector</code>: （默认<code>.section</code>）定义用于插件部分的Javascript选择器。 有时可能需要更改，以避免与使用与fullpage.js相同的选择器的其他插件的问题。</li><li><code>slideSelector</code>: （默认<code>.slide</code>）定义用于插件幻灯片的Javascript选择器。 有时可能需要更改，以避免与使用与fullpage.js相同的选择器的其他插件的问题。</li><li><code>responsiveWidth</code>: （默认<code>0</code>）一个正常的滚动（<code>autoScrolling：false</code>）将在定义的宽度下以像素为单位使用。 如果用户希望将自己的响应式CSS用于身体标记，则会将<code>fp-responsive</code>类添加到身体标记中。 例如，如果设置为900，则每当浏览器的宽度小于900时，插件将像正常站点一样滚动。</li><li><code>responsiveHeight</code>: （默认<code>0</code>）一个正常的滚动（<code>autoScrolling：false</code>）将在定义的高度下以像素为单位使用。 如果用户希望将自己的响应式CSS用于身体标记，则会将<code>fp-responsive</code>类添加到身体标记中。 例如，如果设置为900，则每当浏览器的高度小于900时，插件将像正常站点一样滚动。</li><li><code>responsiveSlides</code>: （默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 设置为<code>true</code>时，在响应模式被触发时，幻灯片将变成垂直节。 （通过使用上面详述的<code>responsiveWidth</code>或<code>responsiveHeight</code>选项）。 需要fullpage.js&gt; = 2.8.5。</li><li><code>parallax</code>: （默认<code>false</code>）<a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 定义是否在节/幻灯片上使用视差背景效果。 <a href="https://github.com/alvarotrigo/fullPage.js/blob/master/lang/chinese/parallax-extension.md" target="_blank" rel="noopener">详细了解如何应用视差选项</a>.</li><li><code>parallaxOptions</code>: （默认：<code>{type：&#39;reveal&#39;，percent：62，property：&#39;translate&#39;}</code>）。 允许在使用选项parallax:true时配置视差背景效果的参数。 <a href="https://github.com/alvarotrigo/fullPage.js/blob/master/lang/chinese/parallax-extension.md" target="_blank" rel="noopener">详细了解如何应用视差选项</a>.</li><li><code>lazyLoading</code>: （默认<code>true</code>）延迟加载默认是激活的，这意味着它会延迟加载包含属性<code>data-src</code>的任何媒体元素，详见<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese/#%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD" target="_blank" rel="noopener">Lazy Loading docs</a>。 如果你想使用任何其他的后加载库，你可以禁用这个fullpage.js功能。</li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>你可以在<a href="http://alvarotrigo.com/fullPage/examples/methods.html" target="_blank" rel="noopener">这里</a>看到它们</p><h3 id="getActiveSection"><a href="#getActiveSection" class="headerlink" title="getActiveSection()"></a>getActiveSection()</h3><p><a href="https://codepen.io/alvarotrigo/pen/VdpzRN/" target="_blank" rel="noopener">示例</a> 获取包含活跃部分及其属性的对象（键入<a href="[https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#callbacks））。](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#callbacks%EF%BC%89%EF%BC%89%E3%80%82">Section</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.getActiveSection();</span><br></pre></td></tr></table></figure><h3 id="getActiveSlide"><a href="#getActiveSlide" class="headerlink" title="getActiveSlide()"></a>getActiveSlide()</h3><p><a href="https://codepen.io/alvarotrigo/pen/VdpzRN/" target="_blank" rel="noopener">示例</a> 获取包含活跃部分及其属性的对象（键入<a href="[https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#callbacks））。）。](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#callbacks%EF%BC%89%EF%BC%89%E3%80%82%EF%BC%89%E3%80%82">Slide</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.getActiveSlide();</span><br></pre></td></tr></table></figure><h3 id="moveSectionUp"><a href="#moveSectionUp" class="headerlink" title="moveSectionUp()"></a>moveSectionUp()</h3><p><a href="http://codepen.io/alvarotrigo/pen/GJXNMN" target="_blank" rel="noopener">示例</a> 向上滚动一节：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.moveSectionUp();</span><br></pre></td></tr></table></figure><hr><h3 id="moveSectionDown"><a href="#moveSectionDown" class="headerlink" title="moveSectionDown()"></a>moveSectionDown()</h3><p><a href="http://codepen.io/alvarotrigo/pen/jPvVZx" target="_blank" rel="noopener">示例</a> 向下滚动一节：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.moveSectionDown();</span><br></pre></td></tr></table></figure><hr><h3 id="moveTo-第节-幻灯片"><a href="#moveTo-第节-幻灯片" class="headerlink" title="moveTo(第节, 幻灯片)"></a>moveTo(第节, 幻灯片)</h3><p><a href="http://codepen.io/alvarotrigo/pen/doqOmY" target="_blank" rel="noopener">示例</a> 将页面滚动到给定节并滑动。 第一张幻灯片，默认情况下，将有索引0。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/*滚动到锚链接`firstSlide`和第二张幻灯片的部分 */</span><br><span class="line">fullpage_api.moveTo(&apos;firstSlide&apos;, 2);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//滚动到网站的第三节</span><br><span class="line">fullpage_api.moveTo(3, 0);</span><br><span class="line"></span><br><span class="line">//这是一样的</span><br><span class="line">fullpage_api.moveTo(3);</span><br></pre></td></tr></table></figure><hr><h3 id="silentMoveTo-第节-幻灯片"><a href="#silentMoveTo-第节-幻灯片" class="headerlink" title="silentMoveTo(第节, 幻灯片)"></a>silentMoveTo(第节, 幻灯片)</h3><p><a href="http://codepen.io/alvarotrigo/pen/doqOeY" target="_blank" rel="noopener">示例</a> 与<a href="https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese/#moveto%E7%AC%AC%E8%8A%82-%E5%B9%BB%E7%81%AF%E7%89%87" target="_blank" rel="noopener"><code>moveTo</code></a>完全相同，但是在这种情况下，它将执行没有动画的滚动。 直接跳到目的地。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/*滚动到锚链接`firstSlide`和第二张幻灯片的部分 */</span><br><span class="line">fullpage_api.silentMoveTo(&apos;firstSlide&apos;, 2);</span><br></pre></td></tr></table></figure><hr><h3 id="moveSlideRight"><a href="#moveSlideRight" class="headerlink" title="moveSlideRight()"></a>moveSlideRight()</h3><p><a href="http://codepen.io/alvarotrigo/pen/Wvgoyz" target="_blank" rel="noopener">示例</a> 将当前节的水平滑块滚动到下一张幻灯片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.moveSlideRight();</span><br></pre></td></tr></table></figure><hr><h3 id="moveSlideLeft"><a href="#moveSlideLeft" class="headerlink" title="moveSlideLeft()"></a>moveSlideLeft()</h3><p><a href="http://codepen.io/alvarotrigo/pen/gpdLjW" target="_blank" rel="noopener">示例</a> 将当前节的水平滑块滚动到上一张幻灯片:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.moveSlideLeft();</span><br></pre></td></tr></table></figure><hr><h3 id="setAutoScrolling-boolean"><a href="#setAutoScrolling-boolean" class="headerlink" title="setAutoScrolling(boolean)"></a>setAutoScrolling(boolean)</h3><p><a href="http://codepen.io/alvarotrigo/pen/rVZWrR" target="_blank" rel="noopener">示例</a> 实时设置滚动配置。 定义页面滚动行为的方式。 如果设置为<code>true</code>，则将使用”自动”滚动，否则将使用站点的”手动”或”正常”滚动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.setAutoScrolling(false);</span><br></pre></td></tr></table></figure><hr><h3 id="setFitToSection-boolean"><a href="#setFitToSection-boolean" class="headerlink" title="setFitToSection(boolean)"></a>setFitToSection(boolean)</h3><p><a href="http://codepen.io/alvarotrigo/pen/GJXNYm" target="_blank" rel="noopener">示例</a> 设置选项<code>fitToSection</code>的值，确定是否适合屏幕中的部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.setFitToSection(false);</span><br></pre></td></tr></table></figure><hr><h3 id="fitToSection"><a href="#fitToSection" class="headerlink" title="fitToSection()"></a>fitToSection()</h3><p><a href="http://codepen.io/alvarotrigo/pen/JWWagj" target="_blank" rel="noopener">示例</a> 滚动到最近的适合视口的活动节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.fitToSection();</span><br></pre></td></tr></table></figure><hr><h3 id="setLockAnchors-boolean"><a href="#setLockAnchors-boolean" class="headerlink" title="setLockAnchors(boolean)"></a>setLockAnchors(boolean)</h3><p><a href="http://codepen.io/alvarotrigo/pen/yNxVRQ" target="_blank" rel="noopener">示例</a> 设置选项<code>lockAnchors</code>的值，确定锚是否在URL中有效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.setLockAnchors(false);</span><br></pre></td></tr></table></figure><hr><h3 id="setAllowScrolling-boolean-directions"><a href="#setAllowScrolling-boolean-directions" class="headerlink" title="setAllowScrolling(boolean, [directions])"></a>setAllowScrolling(boolean, [directions])</h3><p><a href="http://codepen.io/alvarotrigo/pen/EjeNdq" target="_blank" rel="noopener">示例</a> 添加或删除通过使用鼠标滚轮/触控板或触摸手势（默认处于活动状态）滚动节/幻灯片的可能性。 注意这不会禁用键盘滚动。 您将需要使用<code>setKeyboardScrolling</code>。</p><ul><li><code>directions</code>：（可选参数）允许的值：<code>all</code>，<code>up</code>，<code>down</code>，<code>left</code>，<code>right</code>或者它们的组合，用<code>down，right</code>等逗号分隔。 它定义了滚动将被启用或禁用的方向。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//禁用滚动</span><br><span class="line">fullpage_api.setAllowScrolling(false);</span><br><span class="line"></span><br><span class="line">//禁用向下滚动</span><br><span class="line">fullpage_api.setAllowScrolling(false, &apos;down&apos;);</span><br><span class="line"></span><br><span class="line">//禁用向下和向右滚动</span><br><span class="line">fullpage_api.setAllowScrolling(false, &apos;down, right&apos;);</span><br></pre></td></tr></table></figure><hr><h3 id="setKeyboardScrolling-boolean-directions"><a href="#setKeyboardScrolling-boolean-directions" class="headerlink" title="setKeyboardScrolling(boolean, [directions])"></a>setKeyboardScrolling(boolean, [directions])</h3><p><a href="http://codepen.io/alvarotrigo/pen/GJXNwm" target="_blank" rel="noopener">示例</a> 添加或删除通过使用键盘（默认情况下处于活动状态）滚动节的可能性。</p><ul><li><code>directions</code>: （可选参数）允许的值：<code>all</code>，<code>up</code>，<code>down</code>，<code>left</code>，<code>right</code>或者它们的组合，用<code>down，right</code>等逗号分隔。 它定义了滚动将被启用或禁用的方向。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//禁用所有键盘滚动</span><br><span class="line">fullpage_api.setKeyboardScrolling(false);</span><br><span class="line"></span><br><span class="line">//禁用键盘向下滚动</span><br><span class="line">fullpage_api.setKeyboardScrolling(false, &apos;down&apos;);</span><br><span class="line"></span><br><span class="line">//禁用键盘向下和向右滚动</span><br><span class="line">fullpage_api.setKeyboardScrolling(false, &apos;down, right&apos;);</span><br></pre></td></tr></table></figure><hr><h3 id="setRecordHistory-boolean"><a href="#setRecordHistory-boolean" class="headerlink" title="setRecordHistory(boolean)"></a>setRecordHistory(boolean)</h3><p><a href="http://codepen.io/alvarotrigo/pen/rVZWQb" target="_blank" rel="noopener">示例</a> 定义是否在URL中记录每个散列更改的历史记录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.setRecordHistory(false);</span><br></pre></td></tr></table></figure><hr><h3 id="setScrollingSpeed-milliseconds"><a href="#setScrollingSpeed-milliseconds" class="headerlink" title="setScrollingSpeed(milliseconds)"></a>setScrollingSpeed(milliseconds)</h3><p><a href="http://codepen.io/alvarotrigo/pen/NqLbeY" target="_blank" rel="noopener">示例</a> 定义以毫秒为单位的滚动速度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.setScrollingSpeed(700);</span><br></pre></td></tr></table></figure><hr><h3 id="destroy-type"><a href="#destroy-type" class="headerlink" title="destroy(type)"></a>destroy(type)</h3><p><a href="http://codepen.io/alvarotrigo/pen/bdxBzv" target="_blank" rel="noopener">示例</a> 销毁插件事件以及可选的HTML标记和样式。使用AJAX加载内容时的理想选择。</p><ul><li><code>type</code>: （可选参数）可以为空或<code>all</code>。 如果<code>all</code>被传递，fullpage.js使用的HTML标记和样式将被删除。 这样，原始的HTML标记，即任何插件修改之前使用的标记都将被保留。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//销毁由fullPage.js创建的所有Javascript事件（URL中的卷动，hashchange）</span><br><span class="line">fullpage_api.destroy();</span><br><span class="line"></span><br><span class="line">//销毁所有的JavaScript事件，以及在原始HTML标记中由fullPage.js所做的任何修改。</span><br><span class="line">fullpage_api.destroy(&apos;all&apos;);</span><br></pre></td></tr></table></figure><hr><h3 id="reBuild"><a href="#reBuild" class="headerlink" title="reBuild()"></a>reBuild()</h3><p>更新DOM结构以适应新的窗口大小或其内容。   非常适合与AJAX调用或站点的DOM结构中的外部更改结合使用，特别是在使用<code>scrollOverflow：true</code>时。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.reBuild();</span><br></pre></td></tr></table></figure><hr><h3 id="setResponsive-boolean"><a href="#setResponsive-boolean" class="headerlink" title="setResponsive(boolean)"></a>setResponsive(boolean)</h3><p><a href="http://codepen.io/alvarotrigo/pen/WxOyLA" target="_blank" rel="noopener">示例</a> 设置页面的响应模式。 当设置为<code>true时，自动滚动将被关闭，结果与</code>responsiveWidth<code>或</code>responsiveHeight`选项被触发时的结果完全相同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.setResponsive(true);</span><br></pre></td></tr></table></figure><hr><h3 id="responsiveSlides-toSections"><a href="#responsiveSlides-toSections" class="headerlink" title="responsiveSlides.toSections()"></a>responsiveSlides.toSections()</h3><p><a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 需要fullpage.js&gt; = 2.8.5。将水平幻灯片变成垂直节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.responsiveSlides.toSections();</span><br></pre></td></tr></table></figure><hr><h3 id="responsiveSlides-toSlides"><a href="#responsiveSlides-toSlides" class="headerlink" title="responsiveSlides.toSlides()"></a>responsiveSlides.toSlides()</h3><p><a href="http://alvarotrigo.com/fullPage/extensions/" target="_blank" rel="noopener">fullpage.js的扩展</a>。 需要fullpage.js&gt; = 2.8.5。将原始幻灯片（现转换为垂直节）重新转换为水平幻灯片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fullpage_api.responsiveSlides.toSlides();</span><br></pre></td></tr></table></figure><h2 id="Callbacks"><a href="#Callbacks" class="headerlink" title="Callbacks"></a>Callbacks</h2><p><a href="http://codepen.io/alvarotrigo/pen/XbPNQv" target="_blank" rel="noopener">示例</a> 你可以在<a href="http://alvarotrigo.com/fullPage/examples/callbacks.html" target="_blank" rel="noopener">这里</a>看到他们。</p><p>一些回调，例如<code>onLeave</code>将包含<code>Section</code>或<code>Slide</code>类型的参数。 这些对象将包含以下属性：</p><ul><li><code>anchor</code>: <em>(String)</em> 项目的anchorLink。</li><li><code>index</code>: <em>(Number)</em> 项目的index。</li><li><code>item</code>: <em>(DOM element)</em> 项目元素。</li><li><code>isFirst</code>: <em>(Boolean)</em> 判断游标是否在第一行。</li><li><code>isLast</code>: <em>(Boolean)</em> 判断游标是否在最后一行。</li></ul><h3 id="afterLoad-origin-destination-direction"><a href="#afterLoad-origin-destination-direction" class="headerlink" title="afterLoad (origin, destination, direction)"></a>afterLoad (<code>origin</code>, <code>destination</code>, <code>direction</code>)</h3><p>滚动结束之后，一旦加载了节，就会触发回调。参数：</p><ul><li><code>origin</code>: <em>(Object)</em> active section</li><li><code>destination</code>: <em>(Object)</em> 终点部分。</li><li><code>direction</code>: <em>(String)</em> 它将根据滚动方向采用<code>up</code>或<code>down</code>值。</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">anchors: [&apos;firstPage&apos;, &apos;secondPage&apos;, &apos;thirdPage&apos;, &apos;fourthPage&apos;, &apos;lastPage&apos;],</span><br><span class="line"></span><br><span class="line">afterLoad: function(origin)&#123;</span><br><span class="line">var loadedSection = this;</span><br><span class="line"></span><br><span class="line">//使用 index</span><br><span class="line">if(origin.index == 2)&#123;</span><br><span class="line">alert(&quot;第3节停止加载&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//使用 anchorLink</span><br><span class="line">if(origin.anchor == &apos;secondSlide&apos;)&#123;</span><br><span class="line">alert(&quot;第2节停止加载&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="onLeave-origin-destination-direction"><a href="#onLeave-origin-destination-direction" class="headerlink" title="onLeave (origin, destination, direction)"></a>onLeave (<code>origin</code>, <code>destination</code>, <code>direction</code>)</h3><p>一旦用户离开某个节，过渡到新节，就会触发此回调。 返回“false”将在移动发生之前取消移动。</p><p>参数：</p><ul><li><code>origin</code>: <em>(Object)</em> 起始部分</li><li><code>destination</code>: <em>(Object)</em> 终点部分。</li><li><code>direction</code>: <em>(String)</em> 它将根据滚动方向采用<code>up</code>或<code>down</code>值。</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">onLeave: function(index, nextIndex, direction)&#123;</span><br><span class="line">var leavingSection = this;</span><br><span class="line"></span><br><span class="line">//离开第二节后</span><br><span class="line">if(origin.index == 1 &amp;&amp; direction ==&apos;down&apos;)&#123;</span><br><span class="line">alert(&quot;前往第3节！&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if(origin.index == 1 &amp;&amp; direction == &apos;up&apos;)&#123;</span><br><span class="line">alert(&quot;前往第1节！&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="触发之前取消滚动"><a href="#触发之前取消滚动" class="headerlink" title="触发之前取消滚动"></a>触发之前取消滚动</h4><p>您可以通过在<code>onLeave</code>回调函数上返回`false来取消滚动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">onLeave: function(origin, destination, direction)&#123;</span><br><span class="line">//如果目标是第三节，它将不会滚动</span><br><span class="line">if(destination.index == 2)&#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="afterRender"><a href="#afterRender" class="headerlink" title="afterRender()"></a>afterRender()</h3><p>这个回调在页面结构生成后立即被触发。 这是您要用来初始化其他插件的回调函数，或者触发任何需要文档准备就绪的代码（因为这个插件修改了DOM来创建结果的结构）。 请参阅<a href="https://github.com/alvarotrigo/fullPage.js/wiki/FAQ---Frequently-Answered-Questions" target="_blank" rel="noopener">常见问题</a>了解更多信息。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">afterRender: function()&#123;</span><br><span class="line">var pluginContainer = this;</span><br><span class="line">alert(&quot;DOM结构已完成&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="afterResize"><a href="#afterResize" class="headerlink" title="afterResize()"></a>afterResize()</h3><p>调整浏览器窗口大小后，会触发此回调。 就在节被调整之后。</p><p>参数：</p><ul><li><code>width</code>: <em>(Number)</em> 屏幕宽度。</li><li><code>height</code>: <em>(Number)</em> 屏幕高度。</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">afterResize: function(width, height)&#123;</span><br><span class="line">var pluginContainer = this;</span><br><span class="line">alert(&quot;节已重新调整大小&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="afterResponsive-isResponsive"><a href="#afterResponsive-isResponsive" class="headerlink" title="afterResponsive(isResponsive)"></a>afterResponsive(<code>isResponsive</code>)</h3><p>在fullpage.js从正常模式变为响应模式或从响应模式变为正常模式之后，此回调将被触发。</p><p>参数：</p><ul><li><code>isResponsive</code>：<em>(Boolean)</em> 布尔值，用于确定是否进入响应模式（<code>true</code>）或返回正常模式（<code>false</code>）。</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">afterResponsive: function(isResponsive)&#123;</span><br><span class="line">alert(&quot;是否响应&quot; + isResponsive);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="afterSlideLoad-section-origin-destination-direction"><a href="#afterSlideLoad-section-origin-destination-direction" class="headerlink" title="afterSlideLoad (section, origin, destination, direction)"></a>afterSlideLoad (<code>section</code>, <code>origin</code>, <code>destination</code>, <code>direction</code>)</h3><p>滚动结束后，加载一个节的幻灯片后触发回调。</p><p>参数：</p><ul><li><code>section</code>: <em>(Object)</em> 活跃垂直部分。</li><li><code>origin</code>: <em>(Object)</em>水平滑动起始。</li><li><code>destination</code>: <em>(Object)</em>水平滑动终点。</li><li><code>direction</code>: <em>(String)</em> <code>它将根据滚动方向采用right</code> 或 <code>left</code> 值。</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">anchors: [&apos;firstPage&apos;, &apos;secondPage&apos;, &apos;thirdPage&apos;, &apos;fourthPage&apos;, &apos;lastPage&apos;],</span><br><span class="line"></span><br><span class="line">afterSlideLoad: function( section, origin, destination, direction)&#123;</span><br><span class="line">var loadedSlide = this;</span><br><span class="line"></span><br><span class="line">//第二节的第一张幻灯片</span><br><span class="line">if(section.anchor == &apos;secondPage&apos; &amp;&amp; destination.index == 1)&#123;</span><br><span class="line">alert(&quot;第一张幻灯片加载完毕&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//第二节的第二张幻灯片（假设#secondSlide是</span><br><span class="line">        //为第二张幻灯片锚点</span><br><span class="line">if(section.index == 1 &amp;&amp; destination.anchor == &apos;secondSlide&apos;)&#123;</span><br><span class="line">alert(&quot;第二张幻灯片加载完毕&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h3 id="onSlideLeave-section-origin-destination-direction"><a href="#onSlideLeave-section-origin-destination-direction" class="headerlink" title="onSlideLeave (section, origin, destination, direction)"></a>onSlideLeave (<code>section</code>, <code>origin</code>, <code>destination</code>, <code>direction</code>)</h3><p>一旦用户离开幻灯片转到另一个幻灯片，就会触发此回调。返回<code>false</code>将在移动发生之前取消移动。</p><p>参数：</p><ul><li><code>section</code>: <em>(Object)</em> active vertical section.</li><li><code>origin</code>: <em>(Object)</em> horizontal slide of origin.</li><li><code>destination</code>: <em>(Object)</em> destination horizontal slide.</li><li><code>direction</code>: <em>(String)</em> <code>right</code> or <code>left</code> depending on the scrolling direction.</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">new fullpage(&apos;#fullpage&apos;, &#123;</span><br><span class="line">onSlideLeave: function( section, origin, destination, direction)&#123;</span><br><span class="line">var leavingSlide = this;</span><br><span class="line"></span><br><span class="line">//留下第二节的第一张幻灯片</span><br><span class="line">if(section.index == 1 &amp;&amp; origin.index == 0 &amp;&amp; direction == &apos;right&apos;)&#123;</span><br><span class="line">alert(&quot;离开第一张幻灯片！&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//将第二节的第三张幻灯片留在左边</span><br><span class="line">if(section.index == 1 &amp;&amp; origin.index == 2 &amp;&amp; direction == &apos;left&apos;)&#123;</span><br><span class="line">alert(&quot;前往第二张幻灯片！&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="在发生移动之前取消移动"><a href="#在发生移动之前取消移动" class="headerlink" title="在发生移动之前取消移动"></a>在发生移动之前取消移动</h4><p>您可以通过在<code>onSlideLeave</code>回调中返回<code>false</code>来取消移动。 <a href="https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese/#%E8%A7%A6%E5%8F%91%E4%B9%8B%E5%89%8D%E5%8F%96%E6%B6%88%E6%BB%9A%E5%8A%A8" target="_blank" rel="noopener">与使用<code>onLeave</code>取消动作一样</a>。</p>]]></content>
      
      
        <tags>
            
            <tag> 插件使用方法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>localStorage 本地存储</title>
      <link href="/2018/04/12/loaclStorage%E6%9C%AC%E5%9C%B0%E5%82%A8%E5%AD%98/"/>
      <url>/2018/04/12/loaclStorage%E6%9C%AC%E5%9C%B0%E5%82%A8%E5%AD%98/</url>
      <content type="html"><![CDATA[<h3 id="初始化需求与思考步骤"><a href="#初始化需求与思考步骤" class="headerlink" title="初始化需求与思考步骤"></a>初始化需求与思考步骤</h3><ul><li><p>案列的目的</p><ul><li>用户输入搜索信息，通过本地存储的方式 在浏览器打开时渲染信息和重新打开浏览器时不用再次输入即可渲染出推荐内容</li></ul></li><li><p>实现思路</p><ul><li>1.为搜索按钮添加点击事件</li><li>2.获取用户输入的内容</li><li>3.验证用户是否输入了内容</li><li>4.如果用户输入了内容 将内容存储到本地</li><li>5.将数据渲染到页面中</li><li>6.判断当前是否存在历史搜索关键字 来决定是否显示对应的提示文字</li><li>7.为清空按钮添加点击事件 </li><li>8.清空本地存储中的数据</li><li>9.清空页面中的数据</li></ul></li><li><p>遇到的问题及解决方法</p><ul><li><p>用户输入的信息较多，需要用数组保存，但是本地储存只能读取字符串形式</p><ul><li>用JSON.stringify()方法，保存为数组形式的字符串，方便调用</li><li>在读的时候用JSON.parse()转回数组</li></ul></li><li><p>最近刚刚学到一个优化for循环的方法</p><ul><li>在初始化时保存长度，不用你每次循环都去获</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0, len = keyArry.length; i &lt; len; i++) &#123;</span><br><span class="line">     str += &apos;&lt;li&gt; &apos; + keyArry[i] + &apos;&lt;/li&gt;&apos;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h6 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ul &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        input &#123;</span><br><span class="line">            outline: none;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .waper &#123;</span><br><span class="line">            width: 504px;</span><br><span class="line">            margin: 80px auto 20px auto;</span><br><span class="line">            height: 35px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .inp &#123;</span><br><span class="line">            width: 380px;</span><br><span class="line">            height: 31px;</span><br><span class="line">            float: left;</span><br><span class="line">            padding: 0 10px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .btn &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 35px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .result &#123;</span><br><span class="line">            width: 504px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .result li &#123;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            border-top: 1px dashed #707070;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .noResult &#123;</span><br><span class="line">            width: 504px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            padding-top: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .clear &#123;</span><br><span class="line">            width: 504px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            text-align: right;</span><br><span class="line">            padding-bottom: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;waper&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; class=&quot;inp&quot; placeholder=&quot;请输入搜索关键字...&quot; id=&quot;inp&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; class=&quot;btn&quot; value=&quot;搜索&quot; id=&quot;btn&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;clear&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;javascript:;&quot; id=&quot;clearBtn&quot;&gt;清空历史关键字&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;ul class=&quot;result&quot; id=&quot;result&quot;&gt;&lt;/ul&gt;</span><br><span class="line">    &lt;div class=&quot;noResult&quot; id=&quot;noResult&quot;&gt;没有搜索历史关键字&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        // 获取按钮</span><br><span class="line">        var btn = document.getElementById(&apos;btn&apos;);</span><br><span class="line">        // 获取inp</span><br><span class="line">        var inp = document.getElementById(&apos;inp&apos;);</span><br><span class="line">        //获取渲染标签容器</span><br><span class="line">        var result = document.getElementById(&apos;result&apos;);</span><br><span class="line">        // 获取提示文字</span><br><span class="line">        var noResult = document.getElementById(&apos;noResult&apos;);</span><br><span class="line">        // 获取清空历史关键字按钮</span><br><span class="line">        var clearBtn = document.getElementById(&apos;clearBtn&apos;);</span><br><span class="line">        // 给搜索按钮注册点击事件</span><br><span class="line">        // 定义一个空数组,追加获取的信息</span><br><span class="line">        var keyArry = [];</span><br><span class="line">        btn.onclick = function() &#123;</span><br><span class="line">                // 获取用户输入的关键字</span><br><span class="line">                var keyword = inp.value;</span><br><span class="line">                // 判断用户输入的信息是否为空</span><br><span class="line">                if (keyword.trim().length == 0) &#123;</span><br><span class="line">                    alert(&apos;请您输入正确的关键字&apos;);</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                //清空输入框</span><br><span class="line">                inp.value = &apos;&apos;;</span><br><span class="line"></span><br><span class="line">                // 将获取的关键字追加到数组中</span><br><span class="line">                keyArry.push(keyword);</span><br><span class="line">                // 将保存的信息储存到本地</span><br><span class="line">                localStorage.setItem(&apos;keywArry&apos;, JSON.stringify(keyArry));</span><br><span class="line">                // 循环数组，渲染到页面中</span><br><span class="line">                //定义一个空字符串，拼接标签</span><br><span class="line">                var str = &apos;&apos;;</span><br><span class="line">                for (var i = 0, len = keyArry.length; i &lt; len; i++) &#123;</span><br><span class="line">                    str += &apos;&lt;li&gt; &apos; + keyArry[i] + &apos;&lt;/li&gt;&apos;;</span><br><span class="line">                &#125;</span><br><span class="line">                result.innerHTML = str;</span><br><span class="line"></span><br><span class="line">                //渲染数据成功后将提示文字隐藏</span><br><span class="line">                noResult.style.display = &apos;none&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            // 给清空按钮注册事件</span><br><span class="line">        clearBtn.onclick = function() &#123;</span><br><span class="line">                //清空本地存储</span><br><span class="line">                localStorage.removeItem(&apos;keywArry&apos;);</span><br><span class="line">                // 清空变量中的数据</span><br><span class="line">                keyArry = [];</span><br><span class="line">                // 将页面的样式清空</span><br><span class="line">                result.innerHTML = &apos;&apos;;</span><br><span class="line">                // 将提示文字显示</span><br><span class="line">                noResult.style.display = &apos;block&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            // 页面加载显示历史搜索关键字</span><br><span class="line">            // 获取本地储存的信息</span><br><span class="line">        var temp = localStorage.getItem(&apos;keywArry&apos;);</span><br><span class="line">        //判断本地储存的信息是否为空</span><br><span class="line">        if (temp != null) &#123;</span><br><span class="line">            //将本地储存的信息转化为数组</span><br><span class="line">            keyArry = JSON.parse(temp);</span><br><span class="line">            // 拼接字符串，准备渲染页面</span><br><span class="line">            var str = &apos;&apos;;</span><br><span class="line">            for (var i = 0, len = keyArry.length; i &lt; len; i++) &#123;</span><br><span class="line">                str += &apos;&lt;li&gt; &apos; + keyArry[i] + &apos;&lt;/li&gt;&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            //将拼接好的字符串渲染到页面中</span><br><span class="line">            result.innerHTML = str;</span><br><span class="line"></span><br><span class="line">            //渲染数据成功后将提示文字隐藏</span><br><span class="line">            noResult.style.display = &apos;none&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> localStorage.removeItem、localStorage.setItem、localStorage.getItem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>代理跨域及cors跨域</title>
      <link href="/2018/04/03/%E4%BB%A3%E7%90%86%E8%B7%A8%E5%9F%9F%E4%B8%8Ecors%E8%B7%A8%E5%9F%9F/"/>
      <url>/2018/04/03/%E4%BB%A3%E7%90%86%E8%B7%A8%E5%9F%9F%E4%B8%8Ecors%E8%B7%A8%E5%9F%9F/</url>
      <content type="html"><![CDATA[<ul><li><p>服务器代理跨</p><ul><li><p>核心技术是利用php的一个小方法</p><ul><li>file_get_contentss();</li></ul><p>​</p></li></ul></li></ul><h5 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h5><p>js代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;script src=&quot;./jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $.post(&apos;1.php&apos;, function(msg) &#123;</span><br><span class="line">            alert(msg);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>同一个域名下php的代码，利用 file_get_contents 获取其他域的数据并返回给js处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo file_get_contents(&apos;http://www.demo.com/rest.php&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>=============================================================================</p><ul><li><p>sros方法跨域</p><ul><li><p>核心就是在其他域做一个权限权限允许的东西，解决在同源策略下数据无法传输的问题</p><ul><li>使用*表示所有不同域的都可以访问，也可以单独设置特定的域名</li><li>代码实现 - 如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&apos;Access-Control-Allow-Origin:*&apos;);</span><br><span class="line">// echo &apos;这是demo返回的值&apos;;</span><br><span class="line">echo &apos;这是cors的解决方案&apos;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>​</p></li></ul></li></ul>]]></content>
      
      
        <tags>
            
            <tag> cors 代理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jsonp 跨域</title>
      <link href="/2018/04/03/jsoph%E8%B7%A8%E5%9F%9F/"/>
      <url>/2018/04/03/jsoph%E8%B7%A8%E5%9F%9F/</url>
      <content type="html"><![CDATA[<h1 id="此案例仅供学习，请勿乱来！！！"><a href="#此案例仅供学习，请勿乱来！！！" class="headerlink" title="此案例仅供学习，请勿乱来！！！"></a>此案例仅供学习，请勿乱来！！！</h1><ul><li><p>jsonp 的实现的核心技术是利用src、href 的跳转</p></li><li><p>可以利用ajax来完成跨域，实现一些简单的效果</p><ul><li><p>首先需要事件来发送ajax请求，例如通过oninput</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;input id=&quot;ipt&quot; type=&quot;text&quot;&gt;</span><br><span class="line">            &lt;div id=&quot;box&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;script src=&quot;jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">            &lt;script&gt;</span><br><span class="line">                // https://sug.so.360.cn/suggest?callback=suggest_so&amp;encodein=utf-8&amp;encodeout=utf-8&amp;format=json&amp;fields=word&amp;word=1</span><br><span class="line">$(function()&#123;</span><br><span class="line">$(&quot;#ipt&quot;).on(&quot;input&quot;,function()&#123;</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>在注册事件后，就可以发送ajax请求了，而且要注意必须使用get方法</p></li><li><p>其中的<code>$(this).val()</code> 是我们输入的要在360数据库中检索的文本</p></li><li><p>必须设置请求类型为get —  type: ‘get’<br>必须设置dataType为jsonp — dataType: ‘jsonp’<br>必须额外设置一个jsonp参数，该参数值可以是任何英文字符串，常用callback。 jsonp: ‘callback’</p><p>  ==该参数会产生一个随机字符串==</p><pre><code>==前端使用该字符串创建一个函数====后端接收该字符串作为返回函数的名称==</code></pre></li><li><p>接收到后端返回的数据，可以打印出来看看，因为现在用的是别人的数据库所以要去原网页看看</p></li><li><p>最后根据数据完成操作，渲染到页面 <code>data.result</code> 就是原网页的数据，可以是对象或者是数组</p></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">url: &apos;https://sug.so.360.cn/suggest?callback=suggest_so&amp;encodein=utf-8&amp;encodeout=utf-8&amp;format=json&amp;fields=word&amp;word=&apos;+$(this).val(),</span><br><span class="line">type:&apos;get&apos;,</span><br><span class="line">dataType:&apos;jsonp&apos;,</span><br><span class="line">&apos;jsonp&apos;:&apos;callback&apos;,</span><br><span class="line">success:function(data)&#123;</span><br><span class="line">console.log(data);</span><br><span class="line">var lis=&apos;&apos;;</span><br><span class="line">for (var i = 0; i &lt;data.result.length; i++) &#123;</span><br><span class="line">lis+= &quot;&lt;li&gt;&quot;+data.result[i].word+&quot;&lt;/li&gt;&quot;</span><br><span class="line">&#125;</span><br><span class="line">$(&quot;#box&quot;).html(lis);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> ajax 	jsonp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>封装异步</title>
      <link href="/2018/03/12/jqueryAjax%E5%B0%81%E8%A3%85/"/>
      <url>/2018/03/12/jqueryAjax%E5%B0%81%E8%A3%85/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;../jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    //定义$对象，再定义成员方法</span><br><span class="line">        $ = &#123;</span><br><span class="line">            // 编写一个具体的案列</span><br><span class="line">            // 具体案例:  封装一个get方法，能够发送ajax请求，请求1.php文件，并且能接收到1.php的返回数据</span><br><span class="line">            get: function(url, obj, success, dataType) &#123;</span><br><span class="line">                // ① 使用原生js完成整个ajax请求过程 </span><br><span class="line">                var xhr = this.creatxhr();</span><br><span class="line">                xhr.onreadystatechange = function() &#123;</span><br><span class="line">                    if (xhr.readyState == 4) &#123;</span><br><span class="line">                      // 处理接收的返回的字符串</span><br><span class="line">                        var result = xhr.responseText;</span><br><span class="line">                        // 判断是否是json的格式，如果是就转换成json</span><br><span class="line">                        if (dataType == &apos;json&apos;) &#123;</span><br><span class="line">                            result = JSON.parse(result);</span><br><span class="line">                        &#125;</span><br><span class="line">                        //此处的succes为调用函数，传入接收的数据，在调用get方法时就可以通过success函数做自己的操作了</span><br><span class="line">                        success(result);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">                // 调用数据处理函数，并和发送的地址用？拼接起来，就可以发送各种数据了</span><br><span class="line">                str = this.parms(obj);</span><br><span class="line">                url = url + &apos;?&apos; + str;</span><br><span class="line">                xhr.open(&apos;get&apos;, url);</span><br><span class="line">                xhr.send(null);</span><br><span class="line">            &#125;,</span><br><span class="line">            // 处理兼容的问题</span><br><span class="line">            creatxhr: function() &#123;</span><br><span class="line">                if (window.XMLHttpRequest) &#123;</span><br><span class="line">                    var xhr = new XMLHttpRequest();</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    var xhr = new ActiveXObject(&apos;Msxml2.XMLHHTP&apos;);</span><br><span class="line">                &#125;</span><br><span class="line">                return xhr;</span><br><span class="line">            &#125;,</span><br><span class="line">            // 将传入的参数（要发送的数据）处理 格式为键值对形式 列如 name=jack&amp;age=18，方便向后台传输调用</span><br><span class="line">            parms: function(obj) &#123;</span><br><span class="line">                var str = &apos;&apos;;</span><br><span class="line">                for (var key in obj) &#123;</span><br><span class="line">                    str += key + &quot;=&quot; + obj[key] + &apos;&amp;&apos;;</span><br><span class="line">                &#125;</span><br><span class="line">                str = str.slice(0, -1);</span><br><span class="line">                return str;</span><br><span class="line">            &#125;,</span><br><span class="line">            post: function(url, obj, success, dataType) &#123;</span><br><span class="line">                var xhr = this.creatxhr();</span><br><span class="line">                xhr.onreadystatechange = function() &#123;</span><br><span class="line">                    if (xhr.readyState == 4) &#123;</span><br><span class="line">                    // 处理接收的返回的字符串</span><br><span class="line">                        var result = xhr.responseText;</span><br><span class="line">                        // 判断是否是json的格式，如果是就转换成json</span><br><span class="line">                        if (dataType == &apos;json&apos;) &#123;</span><br><span class="line">                            result = JSON.parse(result);</span><br><span class="line">                        &#125;</span><br><span class="line">                       //此处的succes为调用函数，传入接收的数据，在调用get方法时就可以通过success函数</span><br><span class="line">                       做自己的操作了</span><br><span class="line">                        success(result);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                var str = this.parms(obj);</span><br><span class="line">                xhr.open(&apos;post&apos;, url);</span><br><span class="line">                xhr.setRequestHeader(&apos;content-type&apos;, &apos;application/x-www-form-urllencoded&apos;);</span><br><span class="line">                xhr.send(str);</span><br><span class="line">            &#125;,</span><br><span class="line">            ajax: function(obj) &#123;</span><br><span class="line">            // 将ajax的属性使用变量保存，方便调用</span><br><span class="line">                var url = obj.url;</span><br><span class="line">                var data = obj.data || &#123;&#125;; // 判断是否发送数据</span><br><span class="line">                var type = obj.type || &apos;get&apos;; // 判断方法</span><br><span class="line">                var dataType = obj.dataType || &apos;text&apos;; // 判断接收的数据格式</span><br><span class="line">                var success = obj.success; </span><br><span class="line">                // 判断方法，将变量传入实现ajax的简易封装</span><br><span class="line">                if (type = &apos;get&apos;) &#123;</span><br><span class="line">                    this.get(url, data, success, dataType);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    this.post(url, data, success, dataType);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">       // 以下为三种方法的调用</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: &apos;1.php&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                &quot;name&quot;: &quot;jakk&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            type: &apos;post&apos;,</span><br><span class="line">            dataType: &apos;json&apos;,</span><br><span class="line">            success: function(msg) &#123;</span><br><span class="line">                alert(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        // $.get(&apos;1.php&apos;, &#123;</span><br><span class="line">        //     &quot;name&quot;: &quot;jack&quot;</span><br><span class="line">        // &#125;, function(msg) &#123;</span><br><span class="line">        //     console.log(msg);</span><br><span class="line">        // &#125;, &apos;json&apos;)</span><br><span class="line">        // $.post(&apos;1.php&apos;, &#123;</span><br><span class="line">        //     &quot;name&quot;: &quot;jack&quot;</span><br><span class="line">        // &#125;, function(msg) &#123;</span><br><span class="line">        //     console.log(msg);</span><br><span class="line">        // &#125;, &apos;json&apos;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> get post ajax </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>closure(闭包)</title>
      <link href="/2017/12/03/%E9%97%AD%E5%8C%85/"/>
      <url>/2017/12/03/%E9%97%AD%E5%8C%85/</url>
      <content type="html"><![CDATA[<ul><li>闭包</li></ul><ul><li>函数内的函数， 可以读取其他函数内部变量的函数</li><li>闭包使得外部函数返回后JavaScript回收机制不生效，因为内部函数执行需要依赖外部函数的变量（参数 或 自定义的变量）</li><li>闭包是将内部函数和外部函数链接起来的桥梁</li></ul><p><code>&lt;body&gt;</code></p><p>  <code>&lt;button class=&quot;btn1&quot;&gt;按钮1&lt;/button&gt;</code></p><p>​    <code>&lt;button class=&quot;btn2&quot;&gt;按钮2&lt;/button&gt;</code></p><p>  <code>&lt;button class=&quot;btn3&quot;&gt;按钮3&lt;/button&gt;</code></p><p>   <code>&lt;script&gt;</code></p><p>​        var bt1 = document.querySelector(‘.btn1’);</p><p>​        var bt2 = document.querySelector(‘.btn2’);</p><p>​        var bt3 = document.querySelector(‘.btn3’);</p><p>​        function changeColor(color) {</p><p>​            return function() {</p><p>​                document.body.style.backgroundColor = color;</p><p>​            }</p><p>​        }</p><p>​        bt1.onclick = changeColor(‘blue’);</p><p>​        bt2.onclick = changeColor(‘red’);</p><p>​        bt3.onclick = changeColor(‘green’);</p><p><code>&lt;/script&gt;</code></p><p><code>&lt;/body</code></p>]]></content>
      
      
        <tags>
            
            <tag> 闭包小案列、闭包解释 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>投票器小案例</title>
      <link href="/2017/10/10/%E6%8B%89%E7%A5%A8%E5%99%A8jq/"/>
      <url>/2017/10/10/%E6%8B%89%E7%A5%A8%E5%99%A8jq/</url>
      <content type="html"><![CDATA[<ul><li>思路 <ul><li>规划html结构  <ul><li>2个盒子</li><li>1个盒子盛放显示条（两个<code>div</code>） </li><li>第二个个盒子显示文字票数的动态显示 （包含两个<code>div</code>）</li><li>两个bt按钮</li></ul></li><li>jquery 编程<ul><li>点击左右按钮 票数动态增加 </li><li>简单封装样式条的变化 ，方便点击时调用 不点击不调用</li></ul></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: ;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box1 &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box2 &#123;</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .a1,</span><br><span class="line">        .a2 &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            top: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .a1 &#123;</span><br><span class="line">            left: 0;</span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .a2 &#123;</span><br><span class="line">            right: 0;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        button &#123;</span><br><span class="line">            margin-top: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .btn1 &#123;</span><br><span class="line">            margin-right: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h4&gt;投票结果&lt;/h4&gt;</span><br><span class="line">    &lt;div class=&quot;box1&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;a1&quot;&gt;</span><br><span class="line">            50%</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;a2&quot;&gt;</span><br><span class="line">            50%</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;box2&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;result1&quot;&gt;</span><br><span class="line">            1号票数为:</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;result2&quot;&gt;</span><br><span class="line">            2号票数为:</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;/div2&gt;</span><br><span class="line">        &lt;button class=&quot;btn1&quot;&gt;投1&lt;/button&gt;</span><br><span class="line">        &lt;button class=&quot;btn2&quot;&gt;投2&lt;/button&gt;</span><br><span class="line">        &lt;script src=&quot;./jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            $(function() &#123;</span><br><span class="line">                var fesnum = 0;</span><br><span class="line">                var secnum = 0;</span><br><span class="line">                var $btn1 = $(&apos;.btn1&apos;);</span><br><span class="line">                var $btn2 = $(&apos;.btn2&apos;);</span><br><span class="line">                $btn1.on(&apos;click&apos;, function() &#123;</span><br><span class="line">                    fesnum++;</span><br><span class="line">                    $(&apos;.result1&apos;).html(&apos;1号票数为&apos; + fesnum);</span><br><span class="line">                    Style(fesnum, secnum)</span><br><span class="line">                &#125;);</span><br><span class="line">                $btn2.on(&apos;click&apos;, function() &#123;</span><br><span class="line">                    secnum++;</span><br><span class="line">                    $(&apos;.result2&apos;).html(&apos;2号票数为&apos; + secnum);</span><br><span class="line">                    Style(fesnum, secnum)</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                function Style(fesnum, secnum) &#123;</span><br><span class="line">                    var sum = fesnum + secnum;</span><br><span class="line">                    var bluewidth = ((fesnum / sum) * 100).toFixed(2) + &apos;%&apos;;</span><br><span class="line">                    var redwidth = ((secnum / sum) * 100).toFixed(2) + &apos;%&apos;;</span><br><span class="line">                    $(&apos;.a1&apos;).css(&apos;width&apos;, bluewidth).text(bluewidth);</span><br><span class="line">                    $(&apos;.a2&apos;).css(&apos;width&apos;, redwidth).text(redwidth);</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> jQuery、点击事件的简单操作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>斐波那契数列计算</title>
      <link href="/2017/08/11/%E5%85%94%E5%AD%90%E6%95%B0%E5%88%97/"/>
      <url>/2017/08/11/%E5%85%94%E5%AD%90%E6%95%B0%E5%88%97/</url>
      <content type="html"><![CDATA[<ul><li><p>思路 </p><p>​</p><ul><li>原生编程 <ul><li>通过观察发现所求的n的值由前1个与前2个值相加  so     n =（ n-1） + （n-2） </li><li>每次往下加太过繁琐，所以设置一个空的对象来储存计算过的值</li><li>通过一个三元表达式来判断是调用保存的值 还是 计算未计算的值 并 保存</li><li>最外层用一个自执行函数来防止外部的操作，使空对象成为私有变量</li><li>return 函数方法</li></ul></li><li>个人感觉这样优化只会提高运算速度，但阻止了js回收机制，浪费内存</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 观察以下数列规律，计算数列中第n个位置的值</span><br><span class="line">       // 1 1 2 3 5 8 13 21 34 55 89 144...</span><br><span class="line">        //   规律：最前面两个数固定是1，后续的每个数是前两个数的和</span><br><span class="line">        var getFB = (function(n) &#123;</span><br><span class="line">            var obj = &#123;&#125;;//后期优化</span><br><span class="line">            // return getFb(n - 1) + getFb(n - 2); // 原始版</span><br><span class="line">            return function(n) &#123;</span><br><span class="line">                if (n == 1 || n == 2) &#123;</span><br><span class="line">                    return 1;</span><br><span class="line">                &#125;</span><br><span class="line">                return obj[n] ? obj[n] : (obj[n] = arguments.callee(n - 1) + arguments.callee(n - 2)); // 后期优化</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)();</span><br><span class="line"></span><br><span class="line">        console.log(getFB(12))</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 基本实现与优化、递归加闭包 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>弹幕效果</title>
      <link href="/2017/06/22/%E5%BC%B9%E5%B9%95%E6%95%88%E6%9E%9C/"/>
      <url>/2017/06/22/%E5%BC%B9%E5%B9%95%E6%95%88%E6%9E%9C/</url>
      <content type="html"><![CDATA[<ul><li><p>结构说明 </p><ul><li>结构由两部分组成<ul><li>弹幕显示区域</li><li>文字输入及事件操作区域</li></ul></li></ul><p>​</p><p>​</p></li><li><p>实现步骤</p><ul><li>首先给输入框注册input事件</li><li>在输入后判断是否按下回车键（keyCode == 13）</li><li>如果按下了回车键，那么就创建span标签并将输入的文字一并写入到标签中，此时span就是弹幕的文字</li><li>将span标签添加到显示区域</li><li>给sapn标签设置css样式属性<ul><li>颜色为随机样式，之前已将定义好一个数组，只要随机获取就可以了</li><li>top值也为随机值，但要设置好可视区域，不要跑到文字输入区域</li><li>一开始设置隐藏在右，因为接下来要添加动画</li></ul></li><li>设置动画<ul><li>弹幕由右向左进行运动，设置运动时间，否则就没有效果了</li><li>设置运动函数，运动完成后将span标签移出，优化内存</li></ul></li><li>最后将文本框清空，方便下一次发送</li></ul></li><li><p>给button按钮设置点击事件，跟上述的方法一样，不过不用判断keyCode 的值了</p></li></ul><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0px;</span><br><span class="line">            padding: 0px;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            font-family: &quot;微软雅黑&quot;;</span><br><span class="line">            font-size: 62.5%;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .boxDom &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            position: relative;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .idDom &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background: #666;</span><br><span class="line">            position: fixed;</span><br><span class="line">            bottom: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .content &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 430px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0px;</span><br><span class="line">            right: 0px;</span><br><span class="line">            top: 0px;</span><br><span class="line">            bottom: 0px;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .title &#123;</span><br><span class="line">            display: inline;</span><br><span class="line">            font-size: 4em;</span><br><span class="line">            vertical-align: bottom;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .text &#123;</span><br><span class="line">            border: none;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">            font-size: 2.4em;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .btn &#123;</span><br><span class="line">            width: 60px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            background: #f90000;</span><br><span class="line">            border: none;</span><br><span class="line">            color: #fff;</span><br><span class="line">            font-size: 2.4em;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        span &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            color: #000;</span><br><span class="line">            font-size: 4em;</span><br><span class="line">            line-height: 1.5em;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;boxDom&quot; id=&quot;boxDom&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;idDom&quot; id=&quot;idDom&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;title&quot;&gt;吐槽:&lt;/p&gt;</span><br><span class="line">                &lt;!-- 用于输入内容的输入框 --&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; class=&quot;text&quot; id=&quot;text&quot; /&gt;</span><br><span class="line">                &lt;!-- 发射按钮 --&gt;</span><br><span class="line">                &lt;button type=&quot;button&quot; class=&quot;btn&quot; id=&quot;btn&quot;&gt;发射&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;./jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // 给弹幕文字设置颜色随机的效果，用数组包裹起来</span><br><span class="line">    var colorArr = [&apos;red&apos;, &apos;orange&apos;, &apos;blue&apos;, &apos;pink&apos;, &apos;yellow&apos;, &apos;skyblue&apos;, &apos;gold&apos;, &apos;black&apos;];</span><br><span class="line">    $(&apos;#text&apos;).on(&apos;keyup&apos;, function(e) &#123;</span><br><span class="line">        // 判断是否按下回车键，执行代码</span><br><span class="line">        if (e.keyCode === 13) &#123;</span><br><span class="line">            // 2 根据输入框内容，设置一个span结构</span><br><span class="line">            $sp = $(&apos;&lt;span&gt;&apos; + $(this).val() + &apos;&lt;/span&gt;&apos;)</span><br><span class="line">                // 3 将创建的span添加到boxDom元素中</span><br><span class="line">                .appendTo(&apos;#boxDom&apos;)</span><br><span class="line">                // 4 将span设置到页面的右侧外面，并设置随机的top值以及随机的文字颜色</span><br><span class="line">                .css(&#123;</span><br><span class="line">                    right: -300,</span><br><span class="line">                    top: Math.random() * 450,</span><br><span class="line">                    color: colorArr[Math.floor(Math.random() * colorArr.length)]</span><br><span class="line">                &#125;)</span><br><span class="line">                // 5 让span向左侧边界外运动</span><br><span class="line">                .animate(&#123;</span><br><span class="line">                    left: -300</span><br><span class="line">                &#125;, 5000, function() &#123;</span><br><span class="line">                    // 6 运动完毕后，将当前元素移除</span><br><span class="line">                    $sp.remove();</span><br><span class="line">                &#125;);</span><br><span class="line">            // 7 设置清空文本框</span><br><span class="line">            $(this).val(&apos;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        $(&apos;#btn&apos;).on(&apos;click&apos;, function() &#123;</span><br><span class="line">            $sp = $(&apos;&lt;span&gt;&apos; + $(&apos;#text&apos;).val() + &apos;&lt;/span&gt;&apos;)</span><br><span class="line">                .appendTo(&apos;#boxDom&apos;)</span><br><span class="line">                .css(&#123;</span><br><span class="line">                    top: Math.random() * 450,</span><br><span class="line">                    right: -300,</span><br><span class="line">                    color: colorArr[Math.floor(Math.random() * colorArr.length)]</span><br><span class="line">                &#125;)</span><br><span class="line">                .animate(&#123;</span><br><span class="line">                    left: -300</span><br><span class="line">                &#125;, 6000, function() &#123;</span><br><span class="line">                    $sp.remove();</span><br><span class="line">                &#125;)</span><br><span class="line">            $(&apos;#text&apos;).val(&apos;&apos;);</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0px;</span><br><span class="line">            padding: 0px;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            font-family: &quot;微软雅黑&quot;;</span><br><span class="line">            font-size: 62.5%;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .boxDom &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            position: relative;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .idDom &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background: #666;</span><br><span class="line">            position: fixed;</span><br><span class="line">            bottom: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .content &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 430px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0px;</span><br><span class="line">            right: 0px;</span><br><span class="line">            top: 0px;</span><br><span class="line">            bottom: 0px;</span><br><span class="line">            margin: auto;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .title &#123;</span><br><span class="line">            display: inline;</span><br><span class="line">            font-size: 4em;</span><br><span class="line">            vertical-align: bottom;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .text &#123;</span><br><span class="line">            border: none;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">            font-size: 2.4em;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .btn &#123;</span><br><span class="line">            width: 60px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            background: #f90000;</span><br><span class="line">            border: none;</span><br><span class="line">            color: #fff;</span><br><span class="line">            font-size: 2.4em;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        span &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            color: #000;</span><br><span class="line">            font-size: 4em;</span><br><span class="line">            line-height: 1.5em;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;boxDom&quot; id=&quot;boxDom&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;idDom&quot; id=&quot;idDom&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;title&quot;&gt;吐槽:&lt;/p&gt;</span><br><span class="line">                &lt;!-- 用于输入内容的输入框 --&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; class=&quot;text&quot; id=&quot;text&quot; /&gt;</span><br><span class="line">                &lt;!-- 发射按钮 --&gt;</span><br><span class="line">                &lt;button type=&quot;button&quot; class=&quot;btn&quot; id=&quot;btn&quot;&gt;发射&lt;/button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;./jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // 给弹幕文字设置颜色随机的效果，用数组包裹起来</span><br><span class="line">    var colorArr = [&apos;red&apos;, &apos;orange&apos;, &apos;blue&apos;, &apos;pink&apos;, &apos;yellow&apos;, &apos;skyblue&apos;, &apos;gold&apos;, &apos;black&apos;];</span><br><span class="line">    $(&apos;#text&apos;).on(&apos;keyup&apos;, function(e) &#123;</span><br><span class="line">        // 判断是否按下回车键，执行代码</span><br><span class="line">        if (e.keyCode === 13) &#123;</span><br><span class="line">            // 2 根据输入框内容，设置一个span结构</span><br><span class="line">            $sp = $(&apos;&lt;span&gt;&apos; + $(this).val() + &apos;&lt;/span&gt;&apos;)</span><br><span class="line">                // 3 将创建的span添加到boxDom元素中</span><br><span class="line">                .appendTo(&apos;#boxDom&apos;)</span><br><span class="line">                // 4 将span设置到页面的右侧外面，并设置随机的top值以及随机的文字颜色</span><br><span class="line">                .css(&#123;</span><br><span class="line">                    right: -300,</span><br><span class="line">                    top: Math.random() * 450,</span><br><span class="line">                    color: colorArr[Math.floor(Math.random() * colorArr.length)]</span><br><span class="line">                &#125;)</span><br><span class="line">                // 5 让span向左侧边界外运动</span><br><span class="line">                .animate(&#123;</span><br><span class="line">                    left: -300</span><br><span class="line">                &#125;, 5000, function() &#123;</span><br><span class="line">                    // 6 运动完毕后，将当前元素移除</span><br><span class="line">                    $sp.remove();</span><br><span class="line">                &#125;);</span><br><span class="line">            // 7 设置清空文本框</span><br><span class="line">            $(this).val(&apos;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    $(&apos;#btn&apos;).on(&apos;click&apos;, function() &#123;</span><br><span class="line">        $sp = $(&apos;&lt;span&gt;&apos; + $(&apos;#text&apos;).val() + &apos;&lt;/span&gt;&apos;)</span><br><span class="line">            .appendTo(&apos;#boxDom&apos;)</span><br><span class="line">            .css(&#123;</span><br><span class="line">                top: Math.random() * 450,</span><br><span class="line">                right: -300,</span><br><span class="line">                color: colorArr[Math.floor(Math.random() * colorArr.length)]</span><br><span class="line">            &#125;)</span><br><span class="line">            .animate(&#123;</span><br><span class="line">                left: -300</span><br><span class="line">            &#125;, 6000, function() &#123;</span><br><span class="line">                $sp.remove();</span><br><span class="line">            &#125;)</span><br><span class="line">        $(&apos;#text&apos;).val(&apos;&apos;);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> e.ktyCode 	动态创建标签添加文字 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>手风琴</title>
      <link href="/2017/06/20/%E6%89%8B%E9%A3%8E%E7%90%B4%E7%89%B9%E6%95%88/"/>
      <url>/2017/06/20/%E6%89%8B%E9%A3%8E%E7%90%B4%E7%89%B9%E6%95%88/</url>
      <content type="html"><![CDATA[<ul><li><p>结构说明 </p><ul><li><p>一个外层的div（容器）宽高为照片的宽高 ，相对定位</p></li><li><p>容器内包含五张图片（用li标签包含），依据有父盒子，绝对定</p><p>​</p></li></ul></li><li><p>运动规律，当鼠标移入某个li时，当前的li之前的li的left的值等于当前排列的位置<em>100（不固定）根据展示的图片的宽度计算，之后的图片的left值为当前位置 </em> 100  + 展示图片的宽度</p><p>​</p></li></ul><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .box &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: 1200px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid #ccc;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        li &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 1200px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ul &#123;</span><br><span class="line">            width: 1200px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li style=&quot;background-image:url(images/1.jpg);left:0px;&quot;&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li style=&quot;background-image:url(images/2.jpg);left:240px;&quot;&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li style=&quot;background-image:url(images/3.jpg);left:480px;&quot;&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li style=&quot;background-image:url(images/4.jpg);left:720px;&quot;&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li style=&quot;background-image:url(images/5.jpg);left:960px;&quot;&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;../../../练习/第二天/jquery-1.12.4.js &quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 通过观察我们发现：</span><br><span class="line">        //   1 鼠标移入某个li时，运动分为两组</span><br><span class="line">        //    1.1 当前元素和前面的元素的left运动为  i * 100</span><br><span class="line">        //    1.2 后续元素的left运动为  i * 100 + 700</span><br><span class="line">        //   2 鼠标移出时（移出大盒子），设置每个元素的left为原始位置</span><br><span class="line">        var $lis = $(&apos;li&apos;);</span><br><span class="line">        $lis.mouseenter(function() &#123;</span><br><span class="line">       // 获取当期li的索引</span><br><span class="line">            var index = $(this).index();</span><br><span class="line">            for (var i = 0; i &lt; $lis.length; i++) &#123;</span><br><span class="line">            // 进行判断，如果index &lt;=  当前的li的index则left值为当前位置 * 100</span><br><span class="line">                 if (i &lt;= index) &#123;</span><br><span class="line">                    $($lis[i]).stop().animate(&#123;</span><br><span class="line">                        left: i * 50</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; </span><br><span class="line">                // 进行判断，如果index &lt;=  当前的li的index则left值为当前位置 * 100 + 展示图片的宽</span><br><span class="line">                else &#123;</span><br><span class="line">                    $($lis[i]).stop().animate(&#123;</span><br><span class="line">                        left: i * 50 + 950</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        $lis.mouseleave(function() &#123;</span><br><span class="line">            for (var i = 0; i &lt; $lis.length; i++) &#123;</span><br><span class="line">                $($lis[i]).stop().animate(&#123;</span><br><span class="line">                    left: i * 240</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> animate 自定义动画 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>旋转木马</title>
      <link href="/2017/06/06/%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC/"/>
      <url>/2017/06/06/%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC/</url>
      <content type="html"><![CDATA[<ul><li>思路：<ul><li>就是简单的一个轮播效果，不过样式是提前配置好样式，通过样式的变换，实现动画效果</li><li>核心知识点<ul><li>push 从后往前追加 </li><li>pop从后往前删除 返回删除的单元</li><li>shift 从前往后删除 返回删除的单元 </li><li>unshift 从前往后追加</li></ul></li></ul></li></ul><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;旋转木马轮播图&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/css.css&quot; /&gt;</span><br><span class="line">    &lt;script src=&quot;../9-旋转木马特效/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;wrap&quot; id=&quot;wrap&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;slide&quot; id=&quot;slide&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;images/slidepic1.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;images/slidepic2.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;images/slidepic3.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;images/slidepic4.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;images/slidepic5.jpg&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">            &lt;div class=&quot;arrow&quot; id=&quot;arrow&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;javascript:;&quot; class=&quot;prev&quot; id=&quot;arrLeft&quot;&gt;&lt;/a&gt;</span><br><span class="line">                &lt;a href=&quot;javascript:;&quot; class=&quot;next&quot; id=&quot;arrRight&quot;&gt;&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        //标注了每个图片要运动到的位置</span><br><span class="line">        var config = [&#123;</span><br><span class="line">                width: 400,</span><br><span class="line">                top: 20,</span><br><span class="line">                left: 50,</span><br><span class="line">                opacity: 0.2,</span><br><span class="line">                zIndex: 2</span><br><span class="line">            &#125;, //0</span><br><span class="line">            &#123;</span><br><span class="line">                width: 600,</span><br><span class="line">                top: 70,</span><br><span class="line">                left: 0,</span><br><span class="line">                opacity: 0.8,</span><br><span class="line">                zIndex: 3</span><br><span class="line">            &#125;, //1</span><br><span class="line">            &#123;</span><br><span class="line">                width: 800,</span><br><span class="line">                top: 100,</span><br><span class="line">                left: 200,</span><br><span class="line">                opacity: 1,</span><br><span class="line">                zIndex: 4</span><br><span class="line">            &#125;, //2</span><br><span class="line">            &#123;</span><br><span class="line">                width: 600,</span><br><span class="line">                top: 70,</span><br><span class="line">                left: 600,</span><br><span class="line">                opacity: 0.8,</span><br><span class="line">                zIndex: 3</span><br><span class="line">            &#125;, //3</span><br><span class="line">            &#123;</span><br><span class="line">                width: 400,</span><br><span class="line">                top: 20,</span><br><span class="line">                left: 750,</span><br><span class="line">                opacity: 0.2,</span><br><span class="line">                zIndex: 2</span><br><span class="line">            &#125;, //4</span><br><span class="line">        ]; //config其实就是一个配置单 规定了每张图片的大小位置层级透明度</span><br><span class="line"></span><br><span class="line">        // 给每个图片设置样式</span><br><span class="line">        var $lis = $(&apos;li&apos;);</span><br><span class="line">        $lis.each(function(i, elem) &#123;</span><br><span class="line">            $(elem).stop().animate(config[i]);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 获取箭头的父盒子区域，移入移出区域设置箭头显示隐藏</span><br><span class="line">        var $row = $(&apos;#arrow&apos;);</span><br><span class="line">        // 给可视区域绑定鼠标移入事件</span><br><span class="line">        $(&apos;#wrap&apos;).mouseenter(function() &#123;</span><br><span class="line">            // 箭头显示</span><br><span class="line">            $row.stop().animate(&#123;</span><br><span class="line">                opacity: 1</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        // 获取箭头的父盒子区域，移入移出区域设置箭头显示隐藏</span><br><span class="line">        $(&apos;#wrap&apos;).mouseleave(function() &#123;</span><br><span class="line">            // 箭头隐藏</span><br><span class="line">            $row.stop().animate(&#123;</span><br><span class="line">                opacity: 0</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        // 给左箭头绑定事件</span><br><span class="line">        $(&apos;#arrLeft&apos;).click(function() &#123;</span><br><span class="line">            //将已定义好的配置项，第一项位置截取再追加到最后。</span><br><span class="line">            config.push(config.shift());</span><br><span class="line">            // 遍历li标签，给每一个图片配置位置，实现动画。</span><br><span class="line">            $lis.each(function(i, elem) &#123;</span><br><span class="line">                $(elem).stop().animate(config[i]);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">        // 给右箭头绑定事件</span><br><span class="line">        $(&apos;#arrRight&apos;).click(function() &#123;</span><br><span class="line">            //将已定义好的配置项，最后位置截取再追加到第一位置。</span><br><span class="line">            config.unshift(config.pop());</span><br><span class="line">            // 遍历li标签，给每一个图片配置位置，实现动画。</span><br><span class="line">            $lis.each(function(i, elem) &#123;</span><br><span class="line">                $(elem).stop().animate(config[i]);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 很好看的 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JQuery 轮播图</title>
      <link href="/2017/06/03/JQuery%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
      <url>/2017/06/03/JQuery%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      <content type="html"><![CDATA[<ul><li>思路：<ul><li>设置结构 一个大盒子包含图片（嵌套在a标签中）、左右标签、还有数字按钮</li><li>设置第一张图片显示其他的隐藏</li><li>设置主要功能需求 定义变量i 和定时器</li><li>鼠标进过数字按钮  clearInterval 清除定时器，停止自动轮播</li><li>左右箭头点击事件轮播 点左判断i=0时 i=8  i– 点右判断if（i=7）{ i=-1}i++ </li><li>封装定时轮播函数 ，方便以上方法调用</li><li>封装显示函数，方便以上函数调用 使用的是fadeIn 和 fadeOut 动画</li></ul></li></ul><h4 id="结构初始化"><a href="#结构初始化" class="headerlink" title="结构初始化"></a>结构初始化</h4><p>/<em>css初始化</em>/</p><p>body,ul,h1,h2,h3,h4,h5,h6,input,p,dl,dt,dd,span {</p><p>​    margin: 0;</p><p>​    padding: 0;</p><p>}</p><p>body {</p><p>​    font: 14px arial,”microsoft yahei”;</p><p>}</p><p>li {</p><p>​    list-style: none;</p><p>} </p><p>img {</p><p>​    border: 0 none;</p><p>​    vertical-align: middle;</p><p>}</p><p>h1,h2,h3,h4,h5,h6 {</p><p>​    font-weight: normal;</p><p>}</p><p>input {</p><p>​    border: 0 none;</p><p>​    outline-style: none;</p><p>​    vertical-align: top;</p><p>}</p><p>a {</p><p>​    text-decoration: none;</p><p>​    color: #333;</p><p>}</p><p>.w {</p><p>​    width: 1348px;</p><p>​    margin: 0 auto;</p><p>}</p><p>.fl{ </p><p>​    float: left;</p><p> }</p><p> .fr {</p><p>​    float: right;</p><p> }</p><p> .clearfix:before, .clearfix:after {</p><p>​    content: “”;</p><p>​    display: table;</p><p> }</p><p> .clearfix:after {</p><p>​    clear: both;</p><p> }</p><p>.red {</p><p>​    color: red;</p><p>}</p><p>i {</p><p>​    font-style: normal;</p><p>}</p><h4 id="css样式"><a href="#css样式" class="headerlink" title="css样式"></a>css样式</h4><p>#igs {</p><p>​    position: relative;</p><p>​    margin: 0 auto;</p><p>​    width: 790px;</p><p>​    height: 340px;</p><p>​    margin-top: 100px;</p><p>}</p><p>.ig {</p><p>​    position: absolute;</p><p>}</p><p>.btn {</p><p>​    display: inline-block;</p><p>​    height: 50px;</p><p>​    width: 30px;</p><p>​    line-height: 50px;</p><p>​    background-color: rgba(0, 0, 0, .5);</p><p>​    color: aliceblue;</p><p>​    font-size: 18px;</p><p>​    cursor: pointer;</p><p>}</p><p>.bt1 {</p><p>​    position: absolute;</p><p>​    left: 0px;</p><p>​    top: 50%;</p><p>​    border-radius: 0 20px 20px 0;</p><p>}</p><p>.bt2 {</p><p>​    position: absolute;</p><p>​    right: 0;</p><p>​    top: 50%;</p><p>​    text-align: right;</p><p>​    border-radius: 20px 0 0 20px;</p><p>}</p><p>.tab {</p><p>​    width: 15px;</p><p>​    height: 15px;</p><p>​    margin-right: 5px;</p><p>​    background-color: rgba(255, 255, 255, .7);</p><p>​    float: left;</p><p>​    border-radius: 50%;</p><p>​    cursor: pointer;</p><p>​    text-align: center;</p><p>}</p><p>#tabs {</p><p>​    position: absolute;</p><p>​    bottom: 0;</p><p>​    right: 0;</p><p>}</p><h4 id="结构样式"><a href="#结构样式" class="headerlink" title="结构样式"></a>结构样式</h4><p>&lt;!DOCTYPE html&gt;</p><p><code>&lt;html lang=&quot;en&quot;&gt;</code></p><p><code>&lt;head&gt;</code></p><p>​    <code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></p><p>​   <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code></p><p>​    <code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</code></p><p>​  <code>&lt;title&gt;Document&lt;/title&gt;</code></p><p>​    <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./css/common.css&quot;&gt;</code></p><p>​    <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./css/index.css&quot;&gt;</code></p><p><code>&lt;/head&gt;</code></p><p><code>&lt;body&gt;</code></p><p>​    <code>&lt;div id=&quot;igs&quot;&gt;</code></p><p>​        <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img/a&gt;</code></p><p>​        <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​      <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​       <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​        <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​        <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​      <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​       <code>&lt;a href=&quot;#&quot; class=&quot;ig&quot;&gt;img&lt;/a&gt;</code></p><p>​        <code>&lt;span class=&quot;btn bt1&quot;&gt;◁&lt;/span&gt;</code></p><p>​       <code>&lt;span class=&quot;btn bt2&quot;&gt;▷&lt;/span&gt;</code></p><p>​        <code>&lt;ul id=&quot;tabs&quot;&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;1&lt;/li&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;2&lt;/li&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;3&lt;/li&gt;</code></p><p>​           <code>&lt;li class=&quot;tab&quot;&gt;4&lt;/li&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;5&lt;/li&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;6&lt;/li&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;7&lt;/li&gt;</code></p><p>​            <code>&lt;li class=&quot;tab&quot;&gt;8&lt;/li&gt;</code></p><p>​        <code>&lt;/ul&gt;</code></p><p>​  <code>&lt;/div&gt;</code></p><p><code>&lt;/body&gt;</code></p><p><code>&lt;script src=&quot;./js/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;</code></p><p>script src=”./js/lunbo.js”&gt;<code>&lt;/script&gt;</code></p><p><code>&lt;script&gt;</code></p><p>​   $(‘#igs’).lun();</p><p><code>&lt;/script&gt;</code></p><p><code>&lt;/html&gt;</code></p><h4 id="jquery-实现"><a href="#jquery-实现" class="headerlink" title="jquery 实现"></a>jquery 实现</h4><p>$.fn.lun = function() {</p><p>​    var i = 0;</p><p>​    var timer;</p><p>​    $(‘.ig’).eq(0).show().siblings(‘.ig’).hide();</p><p>​    // 调用显示函数</p><p>​    showTime();</p><p>​    $(‘#igs’).on({</p><p>​        mouseover: function() {</p><p>​            clearInterval(timer);</p><p>​        },</p><p>​        mouseleave: function() {</p><p>​            showTime();</p><p>​        }</p><p>​    });</p><p>​    // 鼠标经过数字切换相对应的图片</p><p>​    $(‘.tab’).hover(function() {</p><p>​            i = $(this).index();</p><p>​            show();</p><p>​            clearInterval(timer);</p><p>​        }, function() {</p><p>​            show();</p><p>​        })</p><p>​        // 点击右箭头</p><p>​    $(‘.bt2’).on(‘click’, function() {</p><p>​        clearInterval(timer);</p><p>​        if (i == 7) {</p><p>​            i = -1;</p><p>​        }</p><p>​        i++;</p><p>​        show();</p><p>​        showTime();</p><p>​    });</p><p>​    // 点击左箭头</p><p>​    $(‘.bt1’).on(‘click’, function() {</p><p>​        clearInterval(timer);</p><p>​        if (i == 0) {</p><p>​            i = 8;</p><p>​        }</p><p>​        i–;</p><p>​        show();</p><p>​        showTime();</p><p>​    });</p><p>​    //  轮播函数</p><p>​    function showTime() {</p><p>​        timer = setInterval(function() {</p><p>​            show();</p><p>​            if (i == 7) {</p><p>​                i = -1;</p><p>​            }</p><p>​            i++;</p><p>​        }, 2000)</p><p>​    };</p><p>​    // 显示函数</p><p>​    function show() {</p><p>​        $(‘.ig’).eq(i).fadeIn(300).siblings(‘.ig’).fadeOut(300);</p><p>​    }</p><p>}</p>]]></content>
      
      
        <tags>
            
            <tag> fadeIn fadeOut </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>js原生轮播图</title>
      <link href="/2017/04/10/js%E5%8E%9F%E7%94%9F%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
      <url>/2017/04/10/js%E5%8E%9F%E7%94%9F%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p>&lt;!DOCTYPE html&gt;</p><p><code>&lt;html lang=&quot;en&quot;&gt;</code></p><p><code>&lt;head&gt;</code></p><p><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></p><p> <code>&lt;title&gt;&lt;/title&gt;</code></p><p><code>&lt;style type=&quot;text/css&quot;&gt;</code></p><p>​    * {</p><p>​      padding: 0;</p><p>​      margin: 0;</p><p>​      list-style: none;</p><p>​      border: 0;</p><p>​    }</p><p>​    </p><p>​    .all {</p><p>​      width: 500px;</p><p>​      height: 200px;</p><p>​      padding: 7px;</p><p>​      border: 1px solid #ccc;</p><p>​      margin: 100px auto;</p><p>​      position: relative;</p><p>​    }</p><p>​    </p><p>​    .screen {</p><p>​      width: 500px;</p><p>​      height: 200px;</p><p>​      overflow: hidden;</p><p>​      position: relative;</p><p>​    }</p><p>​    </p><p>​    .screen li {</p><p>​      width: 500px;</p><p>​      height: 200px;</p><p>​      overflow: hidden;</p><p>​      float: left;</p><p>​    }</p><p>​    </p><p>​    .screen ul {</p><p>​      position: absolute;</p><p>​      left: 0;</p><p>​      top: 0px;</p><p>​      width: 3000px;</p><p>​    }</p><p>​    </p><p>​    .all ol {</p><p>​      position: absolute;</p><p>​      right: 10px;</p><p>​      bottom: 10px;</p><p>​      line-height: 20px;</p><p>​      text-align: center;</p><p>​    }</p><p>​    </p><p>​    .all ol li {</p><p>​      float: left;</p><p>​      width: 20px;</p><p>​      height: 20px;</p><p>​      background: #fff;</p><p>​      border: 1px solid #ccc;</p><p>​      margin-left: 10px;</p><p>​      cursor: pointer;</p><p>​    }</p><p>​    </p><p>​    .all ol li.current {</p><p>​      background: yellow;</p><p>​    }</p><p>​    </p><p>​    #arr {</p><p>​      display: none;</p><p>​    }</p><p>​    </p><p>​    #arr span {</p><p>​      width: 40px;</p><p>​      height: 40px;</p><p>​      position: absolute;</p><p>​      left: 5px;</p><p>​      top: 50%;</p><p>​      margin-top: -20px;</p><p>​      background: #000;</p><p>​      cursor: pointer;</p><p>​      line-height: 40px;</p><p>​      text-align: center;</p><p>​      font-weight: bold;</p><p>​      font-family: ‘黑体’;</p><p>​      font-size: 30px;</p><p>​      color: #fff;</p><p>​      opacity: 0.3;</p><p>​      border: 1px solid #fff;</p><p>​    }</p><p>​    </p><p>​    #arr #right {</p><p>​      right: 5px;</p><p>​      left: auto;</p><p>​    }</p><p><code>&lt;/style&gt;</code></p><p><code>&lt;/head&gt;</code></p><p><code>&lt;body&gt;</code></p><p><code>&lt;div class=&quot;all&quot; id=&#39;box&#39;&gt;</code></p><p><code>&lt;div class=&quot;screen&quot;&gt;</code></p><p>​ <code>&lt;ul&gt;</code></p><p>​<code>&lt;li&gt;&lt;img src=&quot;images/1.jpg&quot; width=&quot;500&quot; height=&quot;200&quot;/&gt;&lt;/li&gt;</code></p><p>​<code>&lt;li&gt;&lt;img src=&quot;images/2.jpg&quot; width=&quot;500&quot; height=&quot;200&quot;/&gt;&lt;/li&gt;</code></p><p>​ <code>&lt;li&gt;&lt;img src=&quot;images/3.jpg&quot; width=&quot;500&quot; height=&quot;200&quot;/&gt;&lt;/li&gt;</code></p><p>​   <code>&lt;li&gt;&lt;img src=&quot;images/4.jpg&quot; width=&quot;500&quot; height=&quot;200&quot;/&gt;&lt;/li&gt;</code></p><p>​  <code>&lt;li&gt;&lt;img src=&quot;images/5.jpg&quot; width=&quot;500&quot; height=&quot;200&quot;/&gt;&lt;/li&gt;</code></p><p>​<code>&lt;/ul&gt;</code></p><p>​<code>&lt;ol&gt;</code></p><p>​      <!-- 动态创建的小方块，添加在这里，样式已经给写好了--></p><p><code>&lt;/ol&gt;</code></p><p><code>&lt;/div&gt;</code></p><p><code>&lt;div id=&quot;arr&quot;&gt;&lt;span id=&quot;left&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span id=&quot;right&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;</code></p><p><code>&lt;/div&gt;</code></p><p><code>&lt;script&gt;</code></p><p>  //1 获取元素</p><p>  var box = document.getElementById(“box”);</p><p>  var screenBox = box.children[0];//可视区域</p><p>  var imgWid = screenBox.offsetWidth;//图片宽度</p><p>  var ul = screenBox.children[0];//要运动的ul</p><p>  var lisUl = ul.children;//所有的图片li</p><p>  var ol = screenBox.children[1];//放置小方块的位置</p><p>  var lisOl = ol.children;//要操作的小方块（默认没有内容，添加后会自动增加）</p><p>  var arrBox = box.children[1];//左右箭头的父盒子</p><p>  var arrLeft = arrBox.children[0];</p><p>  var arrRight = arrBox.children[1];</p><p>  //2 动态创建元素部分(小方块创建)</p><p>  var li;</p><p>  for (var i = 0; i &lt; lisUl.length; i++) {</p><p>​    li = document.createElement(“li”);</p><p>​    li.innerText = i + 1;</p><p>​    ol.appendChild(li);</p><p>  }</p><p>  //2.1 给第一个小方块设置默认颜色</p><p>  lisOl[0].className = “current”;</p><p>  //3 简单轮播图效果</p><p>  for (i = 0; i &lt; lisOl.length; i++) {</p><p>​    lisOl[i].index = i;</p><p>​    lisOl[i].onclick = function () {</p><p>​      //—-添加步骤：点击按钮1时，判断，如果当前显示的为假的第一张，直接抽回到0</p><p>​      if (count == lisUl.length - 1) {</p><p>​        ul.style.left = 0 + “px”;</p><p>//        count = 0;</p><p>​      }</p><p>​      </p><p>​      </p><p>​      //点击按钮变色效果</p><p>​      for (var i = 0; i &lt; lisOl.length; i++) {</p><p>​        lisOl[i].className = “”;</p><p>​      }</p><p>​      this.className = “current”;</p><p>​      </p><p>​      //根据当前按钮的索引值设置ul的运动位置</p><p>​      animate(ul, -this.index * imgWid);</p><p>​      </p><p>​      //由于需要让左右箭头操作与小方块操作联动，需要在点击小方块时同步count的值，跟当前按钮索引值相同</p><p>​      count = this.index;</p><p>​    }</p><p>  }</p><p>  //4 左右焦点图效果</p><p>  var count = 0;//用于记录滚出可视区域的图片张数</p><p>  //对ul中的第一个li进行克隆操作，为了制作无缝滚动效果</p><p>  ul.appendChild(lisUl[0].cloneNode(true));</p><p>  arrRight.onclick = fun;</p><p>  arrLeft.onclick = function () {</p><p>​    //当显示的图片为第一张时，如果点击左按钮，需要抽回到假的第一张显示的位置，count也需要对应设置</p><p>​    if (count == 0) {</p><p>​      ul.style.left = -(lisUl.length - 1) * imgWid + “px”;</p><p>​      count = lisOl.length;</p><p>​    }</p><p>​    count–;</p><p>​    animate(ul, -count * imgWid);</p><p>​    //根据count的值，设置对应的小方块变色即可</p><p>​    for (var i = 0; i &lt; lisOl.length; i++) {</p><p>​      lisOl[i].className = “”;</p><p>​    }</p><p>​    lisOl[count].className = “current”;</p><p>  }</p><p>  //5 自动播放</p><p>  //间隔一段时间，执行一下右按钮的所有功能即可</p><p>  // var timer = null;</p><p>  //timer = setInterval(fun,2000);</p><p>  //元素.click(); 用于直接触发标签的点击事件,不能采用函数体的书写形式</p><p>  // timer = setInterval(function () {</p><p>  //   arrRight.click();</p><p>  // }, 2000);</p><p>  //鼠标移入移出，对自动播放进行取消和重新设置</p><p>  //鼠标移入移出显示隐藏箭头</p><p>  box.onmouseover = function () {</p><p>​    arrBox.style.display = “block”;</p><p>​    // clearInterval(timer);</p><p>  };</p><p>  box.onmouseout = function () {</p><p>​    arrBox.style.display = “none”;</p><p>​    // timer = setInterval(function () {</p><p>​    //   arrRight.click();</p><p>​    // }, 2000);</p><p>  };</p><p>  function fun() {</p><p>​    //点击右按钮时检测，如果当前显示的为假的第一张，再次点击右按钮时需要先进行抽回操作，然后再进行滚动即可</p><p>​    if (count == lisOl.length) {//lisOl.length与lisUl.length-1的值相同，使用哪个都可以</p><p>​      ul.style.left = 0 + “px”;</p><p>​      //ul的位置需要和count的值同步，设置left为0后，再将count设置为0</p><p>​      count = 0;</p><p>​    }</p><p>​    count++;</p><p>​    animate(ul, -count * imgWid);</p><p>​    </p><p>​    //点击左右按钮时，设置小方块变色效果</p><p>​    //根据count的值，设置对应的小方块变色即可</p><p>​    for (var i = 0; i &lt; lisOl.length; i++) {</p><p>​      lisOl[i].className = “”;</p><p>​    }</p><p>​    //如果count为5,lisOl.length,设置lisOl[0]类名操作</p><p>​    if (count == lisOl.length) {</p><p>​      lisOl[0].className = “current”;</p><p>​    } else {</p><p>​      lisOl[count].className = “current”;</p><p>​    }</p><p>  }</p><p>  ;</p><p>  function animate(element, target) {</p><p>​    clearInterval(element.timer);//清除旧的定时器，保证匀速运动，防止加速效果</p><p>​    element.timer = setInterval(function () {</p><p>​      //1 获取元素当前位置 使用offsetLeft属性</p><p>​      var current = element.offsetLeft;</p><p>​      //2 设置步长</p><p>​      var step = 17;</p><p>​      //根据当前位置和目标位置的大小关系进行判断</p><p>​      step = target &gt; current ? step : -step;</p><p>​      //5 运动条件设置</p><p>​      //检测当前位置和目标位置之间的距离，如果满足一个step的距离，可以运动，否则直接运动到目标位置，结束</p><p>​      if (Math.abs(target - current) &gt; Math.abs(step)) {</p><p>​        //3 设置运动公式:元素位置(新) = 元素位置(旧) + 步长;</p><p>​        current = current + step;</p><p>​        //4 设置给元素的left值运动</p><p>​        element.style.left = current + “px”;</p><p>​      } else {</p><p>​        //6 让element直接运动到目标位置，再清除定时器</p><p>​        element.style.left = target + “px”;</p><p>​        clearInterval(element.timer);</p><p>​      }</p><p>​    }, 20);</p><p>  }</p><p><code>&lt;/script&gt;</code></p><p><code>&lt;/body&gt;</code></p><p><code>&lt;/html&gt;</code></p>]]></content>
      
      
        <tags>
            
            <tag> 无缝连接 二维联动 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搭建自己的博客</title>
      <link href="/2016/10/03/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2016/10/03/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>hexo 搭建自己的私人博客<br>hexo 搭建自己的私人博客<br>登录github地址 创建并登录自己的github账号</p><p>创建自己的github账号(需要邮箱+验证邮箱)<br>安装git<br>安装 node 等依赖包 安装完成检测包是否安装成功 node -v<br>Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。<br>在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它。<br>安装Hexo，在自己认为合适的地方创个文件夹，我在D盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面<br>输入npm install hexo -g，开始安装Hexo ,输入hexo -v，检查hexo是否安装成功<br>输入hexo init，初始化该文件夹（有点漫长的等待。。。） 初始化完成会有“Start blogging with Hexo！”<br>输入npm install，安装所需要的组件<br>输入hexo g，首次体验Hexo hexo s 启动服务默认地址localhost:4000 (问题：假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号)<br>下载hexo相关主题<br>下载主题</p><p>1<br>2<br>$ cd blog根目录<br>$ git clone <a href="https://github.com/MOxFIVE/hexo-theme-yelee.git" target="_blank" rel="noopener">https://github.com/MOxFIVE/hexo-theme-yelee.git</a> themes/yelee<br>下载完成以后，本地会多出一个文件夹blog/themes/yelee</p><p>这个文件夹就是 yelee 主题相关文件</p><p>?</p><p>使用主题</p><p>在blog根目录下找到_config.yml文件，编辑器打开</p><p>找到 theme: 改成 theme: yelee</p><p>这时主题已经替换好了</p><p>1<br>2<br>$ hexo g<br>$ hexo s<br>就可以在本地localhost:4000预览效果了</p><p>主题设置</p><p>剩下的所有都是主题的对应设置了<br>所有的设置都在blog/themes/yelee个文件夹下，找到_config.yml文件，编辑器打开进行设置<br>主题设置<br>里面有所有的主题设置，根据自己需要进行设置就行，不设置用人家默认的设置也可以<br>?</p><p>将Hexo与Github page联系起来<br>设置Git的user name和email（如果是第一次的话）</p><p>git config –global user.name ‘你的名字’</p><p>git config –global user.email ‘你的邮箱地址’</p><p>输入cd ~/.ssh，检查是否由.ssh的文件夹</p><p>如果没有 输入ssh-keygen -t rsa -C “<a href="mailto:18911295210@163.com" target="_blank" rel="noopener">18911295210@163.com</a>”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh）。<br>登录Github，点击头像下的settings，添加ssh 将id_rsa.pub 复制粘贴到ssh中</p><p>配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾）</p><p>deploy:</p><p>type: git</p><p>repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:FEDwxp/FEDwxp.github.io.git</p><p>branch: master</p><p>在生成以及部署文章之前，需要安装一个扩展：npm install hexo-deployer-git –save</p><p>使用编辑器编好文章，那么就可以使用命令：hexo d -g，生成以及部署了</p>]]></content>
      
      
        <tags>
            
            <tag> 简单点，我的it </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
